"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[5047],{53456:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"linter/overview","title":"Overview","description":"An overview of ink! linter","source":"@site/versioned_docs/version-v6/linter/overview.md","sourceDirName":"linter","slug":"/linter/overview","permalink":"/docs/v6/linter/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/linter/overview.md","tags":[],"version":"v6","frontMatter":{"title":"Overview","hide_title":true,"description":"An overview of ink! linter"},"sidebar":"reference","previous":{"title":"Storage Metadata Format","permalink":"/docs/v6/datastructures/storage-in-metadata"},"next":{"title":"no_main","permalink":"/docs/v6/linter/rules/no_main"}}');var r=t(23420),s=t(65404);const l={title:"Overview",hide_title:!0,description:"An overview of ink! linter"},a="Overview",o={},c=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"Suppressing linter warnings",id:"suppressing-linter-warnings",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"Text/linter Title Picture",src:t(74632).A+"",width:"1600",height:"500"})}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,r.jsx)(n.h1,{id:"overview-1",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"ink! includes the linter \u2014 a security tool designed to identify typical security issues in smart contracts. The linter is meant to seamlessly fit into the smart contracts development process, ensuring that contracts are thoroughly checked during the build phase before they are deployed to the blockchain."}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"Our linter requires two crates and a fixed Rust toolchain version. You can use\nthese commands to install the required dependencies:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"export TOOLCHAIN_VERSION=nightly-2025-02-20\nrustup install $TOOLCHAIN_VERSION\nrustup component add rust-src --toolchain $TOOLCHAIN_VERSION\nrustup run $TOOLCHAIN_VERSION cargo install cargo-dylint dylint-link\n"})}),"\n",(0,r.jsx)(n.p,{children:"Note that the linter requires this specific version of the toolchain,\nsince it uses the internal Rust compiler API. That's also why we require\nnightly for the linter, these internal crates are not accessible on stable."}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsxs)(n.p,{children:["The linter operates via ",(0,r.jsx)(n.code,{children:"cargo-contract"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"To perform a build with extra code analysis (i.e. the ink! linting rules), run the\nfollowing command within the contract directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ cargo contract build --lint\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command compiles the contract and applies all linting checks. You can find the complete list of lints along with their descriptions in this documentation."}),"\n",(0,r.jsx)(n.h2,{id:"suppressing-linter-warnings",children:"Suppressing linter warnings"}),"\n",(0,r.jsxs)(n.p,{children:["To suppress linter warnings in your ink! smart-contract, you can use ",(0,r.jsx)(n.code,{children:"allow"})," attributes. You can apply these attributes either to a particular piece of code or globally."]}),"\n",(0,r.jsx)(n.p,{children:"Here's how to suppress the specific linter warnings:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-rust",children:'// Suppressing the `primitive_topic` lint globally\n#[cfg_attr(dylint_lib = "ink_linting", allow(primitive_topic))]\n\n#[ink(message)]\npub fn test(&mut self) {\n    // Suppressing the `strict_balance_equality` lint in a specific place\n    #[cfg_attr(dylint_lib = "ink_linting", allow(strict_balance_equality))]\n    if self.env().balance() == 10 { /* ... */ }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},65404:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var i=t(36672);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}},74632:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/linter-df0c5c7a768f602a94e447c025092757.svg"}}]);