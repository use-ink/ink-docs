"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9138],{7539:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"cargo-contract/overview","title":"Overview","description":"version","source":"@site/versioned_docs/version-3.x/cargo-contract/overview.md","sourceDirName":"cargo-contract","slug":"/cargo-contract-cli","permalink":"/3.x/cargo-contract-cli","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-3.x/cargo-contract/overview.md","tags":[],"version":"3.x","frontMatter":{"title":"Overview","slug":"/cargo-contract-cli"},"sidebar":"reference","previous":{"title":"Overview","permalink":"/3.x/examples"},"next":{"title":"Overview","permalink":"/3.x/testnet"}}');var a=n(4848),c=n(8453);const o={title:"Overview",slug:"/cargo-contract-cli"},s=void 0,i={},l=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://crates.io/crates/cargo-contract",children:(0,a.jsx)(t.img,{src:"https://img.shields.io/crates/v/cargo-contract.svg",alt:"version"})})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"cargo-contract"})," is a CLI tool which helps you set up and manage\nWebAssembly smart contracts written with ink!.\nYou can find it ",(0,a.jsx)(t.a,{href:"https://github.com/use-ink/cargo-contract",children:"here on GitHub"}),"\nand here on ",(0,a.jsx)(t.a,{href:"https://crates.io/crates/cargo-contract",children:"crates.io"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"The tool has a number of handy capabilities:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"cargo-contract 0.8.0\nUtilities to develop Wasm smart contracts.\n\nUSAGE:\n    cargo contract <SUBCOMMAND>\n\nOPTIONS:\n    -h, --help       Prints help information\n    -V, --version    Prints version information\n\nSUBCOMMANDS:\n    new                  Setup and create a new smart contract project\n    build                Compiles the contract, generates metadata, bundles both together in a '.contract' file\n    check                Check that the code builds as Wasm; does not output any build artifact to the top level `target/` directory\n    test                 Test the smart contract off-chain\n    deploy               Upload the smart contract code to the chain\n    instantiate          Instantiate a deployed smart contract\n    help                 Prints this message or the help of the given subcommand(s)\n"})}),"\n",(0,a.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(t.p,{children:["As a pre-requisite for the tool you need to install the ",(0,a.jsx)(t.a,{href:"https://github.com/WebAssembly/binaryen",children:"binaryen"})," package, which is used to optimize the WebAssembly bytecode of the contract."]}),"\n",(0,a.jsxs)(t.p,{children:["Many package managers have it available nowadays \u2012 e.g. it's a package for ",(0,a.jsx)(t.a,{href:"https://tracker.debian.org/pkg/binaryen",children:"Debian/Ubuntu"}),",\n",(0,a.jsx)(t.a,{href:"https://formulae.brew.sh/formula/binaryen",children:"Homebrew"})," and ",(0,a.jsx)(t.a,{href:"https://archlinux.org/packages/community/x86_64/binaryen/",children:"Arch Linux"}),"."]}),"\n",(0,a.jsx)(t.p,{children:"After you've installed the package execute:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"cargo install cargo-contract --force --locked\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Use the ",(0,a.jsx)(t.code,{children:"--force"})," to ensure you are updated to the most recent ",(0,a.jsx)(t.code,{children:"cargo-contract"})," version."]}),"\n",(0,a.jsxs)(t.p,{children:["You can then use ",(0,a.jsx)(t.code,{children:"cargo contract --help"})," to start exploring the commands made available to you."]}),"\n",(0,a.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,a.jsx)(t.p,{children:"In order to initialize a new ink! project you can use:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"cargo contract new flipper\n"})}),"\n",(0,a.jsxs)(t.p,{children:["This will create a folder ",(0,a.jsx)(t.code,{children:"flipper"})," in your work directory.\nThe folder contains a scaffold ",(0,a.jsx)(t.code,{children:"Cargo.toml"})," and a ",(0,a.jsx)(t.code,{children:"lib.rs"}),", which both contain the necessary building blocks for using ink!."]}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"lib.rs"})," contains our hello world contract \u2012 the ",(0,a.jsx)(t.code,{children:"Flipper"}),", which we explain in the next section."]}),"\n",(0,a.jsxs)(t.p,{children:["In order to build the contract just execute these commands in the ",(0,a.jsx)(t.code,{children:"flipper"})," folder:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:"cargo contract build\n"})}),"\n",(0,a.jsxs)(t.p,{children:["As a result you'll get the file ",(0,a.jsx)(t.code,{children:"target/flipper.contract"}),". It's a JSON which bundles the contract's\nmetadata and its Wasm blob. This file needs to be used when deploying the contract.\nYou additionally get the individual ",(0,a.jsx)(t.code,{children:"target/flipper.wasm"})," and ",(0,a.jsx)(t.code,{children:"target/metadata.json"})," in the folder as well."]})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>s});var r=n(6540);const a={},c=r.createContext(a);function o(e){const t=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);