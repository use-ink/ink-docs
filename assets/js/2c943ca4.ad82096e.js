"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[8872],{78718:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"getting-started/cargo-contract","title":"Install cargo-contract","description":"cargo-contract is a command-line (CLI) tool that helps you set up and manage","source":"@site/versioned_docs/version-v6/getting-started/cargo-contract.md","sourceDirName":"getting-started","slug":"/cargo-contract-cli","permalink":"/docs/v6/cargo-contract-cli","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/getting-started/cargo-contract.md","tags":[],"version":"v6","frontMatter":{"title":"Install cargo-contract","slug":"/cargo-contract-cli"}}');var c=n(74848),o=n(28453);const r={title:"Install cargo-contract",slug:"/cargo-contract-cli"},i=void 0,s={},l=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(t.p,{children:[(0,c.jsx)(t.code,{children:"cargo-contract"})," is a command-line (CLI) tool that helps you set up and manage\nsmart contracts written with ink!."]}),"\n",(0,c.jsx)(t.p,{children:"The tool has a number of handy capabilities:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:"$ cargo contract       \nUtilities to develop ink! smart contracts\n\nUsage: cargo contract <COMMAND>\n\nCommands:\n  new              Setup and create a new smart contract project\n  build            Compiles the contract, generates metadata, bundles both together in a `<name>.contract` file\n  check            Check that the code builds for PolkaVM; does not output any `<name>.contract` artifact to the `target/` directory\n  upload           Upload contract code\n  instantiate      Instantiate a contract\n  call             Call a contract\n  account          Account handling and information\n  encode           Encodes a contracts input calls and their arguments\n  decode           Decodes a contracts input or output data (supplied in hex-encoding)\n  remove           Remove contract code\n  info             Display information about a contract\n  storage          Inspect the on-chain storage of a contract\n  verify           Verifies that a given contract binary matches the build result of the specified workspace\n  generate-schema  Generates schema from the current metadata specification\n  verify-schema    Verify schema from the current metadata specification\n  rpc              Make a raw RPC call\n  help             Print this message or the help of the given subcommand(s)\n\nOptions:\n  -h, --help     Print help\n  -V, --version  Print version\n"})}),"\n",(0,c.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,c.jsxs)(t.p,{children:["Please see the installation instructions in the ",(0,c.jsx)(t.code,{children:"cargo-contract"})," repository ",(0,c.jsx)(t.a,{href:"https://github.com/use-ink/cargo-contract#installation",children:"here"}),"."]}),"\n",(0,c.jsxs)(t.p,{children:["You can then use ",(0,c.jsx)(t.code,{children:"cargo contract --help"})," to start exploring the commands made available to you."]}),"\n",(0,c.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,c.jsx)(t.p,{children:"In order to initialize a new ink! project you can use:"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"$ cargo contract new flipper\n"})}),"\n",(0,c.jsxs)(t.p,{children:["This will create a folder ",(0,c.jsx)(t.code,{children:"flipper"})," in your work directory.\nThe folder contains a scaffold ",(0,c.jsx)(t.code,{children:"Cargo.toml"})," and a ",(0,c.jsx)(t.code,{children:"lib.rs"}),", which both contain the necessary building blocks for using ink!."]}),"\n",(0,c.jsxs)(t.p,{children:["The ",(0,c.jsx)(t.code,{children:"lib.rs"})," contains our hello world contract \u2012 the ",(0,c.jsx)(t.code,{children:"Flipper"}),", which we explain in the next section."]}),"\n",(0,c.jsxs)(t.p,{children:["In order to build the contract just execute these commands in the ",(0,c.jsx)(t.code,{children:"flipper"})," folder:"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-bash",children:"$ cargo contract build\n"})}),"\n",(0,c.jsxs)(t.p,{children:["As a result you'll get the file ",(0,c.jsx)(t.code,{children:"target/flipper.contract"}),". It's a JSON which bundles the contract's\nmetadata and its RISC-V binary blob. This file needs to be used when deploying the contract.\nYou additionally get the individual ",(0,c.jsx)(t.code,{children:"target/flipper.polkavm"})," and ",(0,c.jsx)(t.code,{children:"target/flipper.json"})," in the folder as well.\nThe ",(0,c.jsx)(t.code,{children:".polkavm"})," extension is used because the interpreter for the RISC-V bytecode\nis a component called ",(0,c.jsx)(t.a,{href:"http://github.com/paritytech/polkavm",children:"PolkaVM"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var a=n(96540);const c={},o=a.createContext(c);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);