"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[1174],{925:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>u});const r=JSON.parse('{"id":"debugging/return_value","title":"Return value","description":"Magnifying Glass Title Picture","source":"@site/versioned_docs/version-v6/debugging/return_value.md","sourceDirName":"debugging","slug":"/contract-debugging/return-value","permalink":"/docs/v6/contract-debugging/return-value","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/debugging/return_value.md","tags":[],"version":"v6","frontMatter":{"title":"Return value","slug":"/contract-debugging/return-value","hide_title":true},"sidebar":"reference","previous":{"title":"Debug Events","permalink":"/docs/v6/contract-debugging/debug-events"},"next":{"title":"Tracing API","permalink":"/docs/v6/contract-debugging/pallet-revive-tracing-api"}}');var s=t(74848),i=t(28453);const a={title:"Return value",slug:"/contract-debugging/return-value",hide_title:!0},c="Return an error message",o={},u=[];function l(e){const n={a:"a",code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Magnifying Glass Title Picture",src:t(6381).A+"",width:"1600",height:"500"})}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"return-an-error-message",children:"Return an error message"})}),"\n",(0,s.jsxs)(n.p,{children:["You can return a specific error message from your contract via\n",(0,s.jsx)(n.a,{href:"https://docs.rs/ink_env/5.1.1/ink_env/fn.return_value.html",children:(0,s.jsx)(n.code,{children:"ink::return_value(REVERT, err);"})}),"."]}),"\n",(0,s.jsx)(n.p,{children:"If you do a dry-run of the contract call, you can read this data."}),"\n",(0,s.jsx)(n.p,{children:'You cannot read the data if you submit the extrinsic on-chain\n(i.e. execute the contract call "for real", on-chain). This is because extrinsic\ndo not return data. They are executed in a transaction pool, asynchronous.'}),"\n",(0,s.jsxs)(n.p,{children:['Furthermore, since you "REVERT" the transaction, it will just fail with\n',(0,s.jsx)(n.code,{children:"ExtrinsicFailed"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here's an example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#[ink::message]\nfn get(&self) {\n    ink::return_value(\n        ink::env::ReturnFlags::REVERT,\n        format!("received {:?}", self.env().transferred_value()).as_bytes();\n    );\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["We've put the above into a complete example. You can see the full source code\n",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink/tree/master/integration-tests/public/debugging-strategies/lib.rs",children:"here"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},6381:(e,n,t)=>{t.d(n,{A:()=>r});const r=t.p+"assets/images/magnifying-glass-3ca6f9b0db517931b899b678a8543a81.svg"},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);