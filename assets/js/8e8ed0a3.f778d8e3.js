"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[1787],{398:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"4.x","label":"4.x","banner":null,"badge":true,"noIndex":false,"className":"docs-version-4.x","isLast":false,"docsSidebars":{"reference":[{"type":"category","label":"Overview","items":[{"type":"link","label":"Welcome!","href":"/4.x/","docId":"intro/intro","unlisted":false},{"type":"link","label":"Why Rust for Smart Contracts?","href":"/4.x/why-rust-for-smart-contracts","docId":"intro/why-rust","unlisted":false},{"type":"link","label":"Why WebAssembly for Smart Contracts?","href":"/4.x/why-webassembly-for-smart-contracts","docId":"intro/why-webassembly","unlisted":false},{"type":"link","label":"Smart Contracts in Polkadot","href":"/4.x/smart-contracts-polkadot","docId":"intro/polkadot","unlisted":false},{"type":"link","label":"How it Works \u2013 Substrate","href":"/4.x/how-it-works","docId":"intro/how-it-works","unlisted":false},{"type":"link","label":"ink! vs. Solidity","href":"/4.x/ink-vs-solidity","docId":"intro/ink-vs-solidity","unlisted":false},{"type":"link","label":"ink! vs. CosmWasm","href":"/4.x/ink-vs-cosmwasm","docId":"intro/ink-vs-cosmwasm","unlisted":false},{"type":"link","label":"Migrating an ink! contract to a Parachain Runtime","href":"/4.x/migrate-ink-contracts-to-polkadot-frame-parachain","docId":"intro/migrate-to-parachain","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Getting started","items":[{"type":"link","label":"Setup","href":"/4.x/getting-started/setup","docId":"getting-started/setup","unlisted":false},{"type":"link","label":"Creating an ink! Project","href":"/4.x/getting-started/creating-an-ink-project","docId":"getting-started/creating","unlisted":false},{"type":"link","label":"Compile Your Contract","href":"/4.x/getting-started/building-your-contract","docId":"getting-started/compiling","unlisted":false},{"type":"link","label":"Run a Substrate Node","href":"/4.x/getting-started/running-substrate","docId":"getting-started/running","unlisted":false},{"type":"link","label":"Deploy Your Contract","href":"/4.x/getting-started/deploy-your-contract","docId":"getting-started/deploying","unlisted":false},{"type":"link","label":"Call Your Contract","href":"/4.x/getting-started/calling-your-contract","docId":"getting-started/calling","unlisted":false},{"type":"link","label":"Troubleshooting","href":"/4.x/getting-started/troubleshooting","docId":"getting-started/troubleshooting","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Basics","items":[{"type":"link","label":"Contract Template","href":"/4.x/basics/contract-template","docId":"basics/contract-template","unlisted":false},{"type":"link","label":"Storing Values","href":"/4.x/basics/storing-values","docId":"basics/storing-values","unlisted":false},{"type":"link","label":"Reading Values from Storage","href":"/4.x/basics/reading-values","docId":"basics/reading-values","unlisted":false},{"type":"link","label":"Mutating Storage Values","href":"/4.x/basics/mutating-values","docId":"basics/mutating-values","unlisted":false},{"type":"link","label":"Events","href":"/4.x/basics/events","docId":"basics/events","unlisted":false},{"type":"link","label":"Selectors","href":"/4.x/basics/selectors","docId":"basics/selectors","unlisted":false},{"type":"link","label":"Trait Definitions","href":"/4.x/basics/trait-definitions","docId":"basics/trait-definitions","unlisted":false},{"type":"link","label":"Cross-Contract Calling","href":"/4.x/basics/cross-contract-calling","docId":"basics/cross-contract-calling","unlisted":false},{"type":"link","label":"Upgradeable Contracts","href":"/4.x/basics/upgradeable-contracts","docId":"basics/upgradeability","unlisted":false},{"type":"link","label":"Environment Functions","href":"/4.x/basics/environment-functions","docId":"basics/env-functions","unlisted":false},{"type":"link","label":"Chain Environment Types","href":"/4.x/basics/chain-environment-types","docId":"basics/environment","unlisted":false},{"type":"link","label":"Metadata","href":"/4.x/basics/metadata","docId":"basics/metadata","unlisted":false},{"type":"link","label":"Contract Testing","href":"/4.x/basics/contract-testing","docId":"basics/testing","unlisted":false},{"type":"link","label":"Contract Debugging","href":"/4.x/basics/contract-debugging","docId":"basics/debugging","unlisted":false},{"type":"category","label":"Verification","items":[{"type":"link","label":"Contract Verification","href":"/4.x/basics/verification/contract-verification","docId":"basics/verification/contract-verification","unlisted":false},{"type":"link","label":"Sirato","href":"/4.x/basics/verification/sirato","docId":"basics/verification/sirato","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Macros & Attributes","items":[{"type":"link","label":"Overview","href":"/4.x/macros-attributes","docId":"macros-attributes/overview","unlisted":false},{"type":"link","label":"#[ink::contract]","href":"/4.x/macros-attributes/contract","docId":"macros-attributes/contract","unlisted":false},{"type":"link","label":"#[ink(anonymous)]","href":"/4.x/macros-attributes/anonymous","docId":"macros-attributes/anonymous","unlisted":false},{"type":"link","label":"#[ink(constructor)]","href":"/4.x/macros-attributes/constructor","docId":"macros-attributes/constructor","unlisted":false},{"type":"link","label":"#[ink(default)]","href":"/4.x/macros-attributes/default","docId":"macros-attributes/default","unlisted":false},{"type":"link","label":"#[ink(event)]","href":"/4.x/macros-attributes/event","docId":"macros-attributes/event","unlisted":false},{"type":"link","label":"#[ink(impl)]","href":"/4.x/macros-attributes/impl","docId":"macros-attributes/implementation","unlisted":false},{"type":"link","label":"#[ink(message)]","href":"/4.x/macros-attributes/message","docId":"macros-attributes/message","unlisted":false},{"type":"link","label":"#[ink(namespace = \\"\u2026\\")]","href":"/4.x/macros-attributes/namespace","docId":"macros-attributes/namespace","unlisted":false},{"type":"link","label":"#[ink(payable)]","href":"/4.x/macros-attributes/payable","docId":"macros-attributes/payable","unlisted":false},{"type":"link","label":"#[ink(selector = S:u32)]","href":"/4.x/macros-attributes/selector","docId":"macros-attributes/selector","unlisted":false},{"type":"link","label":"#[ink(storage)]","href":"/4.x/macros-attributes/storage","docId":"macros-attributes/storage","unlisted":false},{"type":"link","label":"#[ink(topic)]","href":"/4.x/macros-attributes/topic","docId":"macros-attributes/topic","unlisted":false},{"type":"link","label":"#[ink::chain_extension]","href":"/4.x/macros-attributes/chain-extension","docId":"macros-attributes/chain-extension","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Storage & Data Structures","items":[{"type":"link","label":"Overview","href":"/4.x/datastructures/overview","docId":"datastructures/overview","unlisted":false},{"type":"link","label":"Working with Mapping","href":"/4.x/datastructures/mapping","docId":"datastructures/mapping","unlisted":false},{"type":"link","label":"Storage Layout","href":"/4.x/datastructures/storage-layout","docId":"datastructures/storage-layout","unlisted":false},{"type":"link","label":"Custom Data Structures","href":"/4.x/datastructures/custom-datastructure","docId":"datastructures/custom","unlisted":false},{"type":"link","label":"Metadata Format","href":"/4.x/datastructures/storage-in-metadata","docId":"datastructures/storage-in-metadata","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Frontend Development","items":[{"type":"link","label":"Overview","href":"/4.x/frontend/overview","docId":"frontend/overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Examples","items":[{"type":"link","label":"Smart Contracts","href":"/4.x/examples/smart-contracts","docId":"examples/contracts","unlisted":false},{"type":"link","label":"DApps","href":"/4.x/examples/dapps","docId":"examples/dapps","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"ink!ubator","items":[{"type":"link","label":"Kickstart your project!","href":"/4.x/inkubator-overview","docId":"inkubator/overview","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Testnet","items":[{"type":"link","label":"Contracts on Rococo","href":"/4.x/testnet","docId":"testnet/overview","unlisted":false},{"type":"link","label":"Faucet","href":"/4.x/faucet","docId":"testnet/faucet","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Third Party Tools & Libraries","items":[{"type":"link","label":"OpenBrush","href":"/4.x/getting-started/use-openbrush","docId":"third-party-tools/openbrush","unlisted":false},{"type":"category","label":"Swanky suite","items":[{"type":"link","label":"Swanky CLI","href":"/4.x/getting-started/swanky/cli","docId":"third-party-tools/swanky/cli","unlisted":false},{"type":"link","label":"Swanky Node","href":"/4.x/getting-started/swanky/node","docId":"third-party-tools/swanky/node","unlisted":false}],"collapsed":true,"collapsible":true,"href":"/4.x/getting-started/swanky"},{"type":"link","label":"ink! Analyzer","href":"/4.x/getting-started/ink-analyzer","docId":"third-party-tools/ink-analyzer","unlisted":false},{"type":"link","label":"ink!athon DApp Boilerplate","href":"/4.x/getting-started/inkathon","docId":"third-party-tools/inkathon","unlisted":false},{"type":"link","label":"SubWallet","href":"/4.x/getting-started/subwallet","docId":"third-party-tools/subwallet","unlisted":false},{"type":"link","label":"Polkadot Contract Wizard","href":"/4.x/getting-started/contract-wizard","docId":"third-party-tools/contract-wizard/index","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"FAQ","items":[{"type":"link","label":"Frequently Asked Questions","href":"/4.x/faq","docId":"faq/faq","unlisted":false},{"type":"link","label":"Migrating from ink! 3.x to 4.0","href":"/4.x/faq/migrating-from-ink-3-to-4","docId":"faq/migrating-from-ink-3-to-4","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Brand Assets","items":[{"type":"link","label":"ink!","href":"/4.x/brand-assets/ink","docId":"brand-assets/ink","unlisted":false},{"type":"link","label":"Community Badges","href":"/4.x/brand-assets/community-badges","docId":"brand-assets/community-badges","unlisted":false},{"type":"link","label":"cargo-contract","href":"/4.x/brand-assets/cargo-contract","docId":"brand-assets/cargo-contract","unlisted":false},{"type":"link","label":"Stickers","href":"/4.x/brand-assets/stickers","docId":"brand-assets/stickers","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"basics/contract-template":{"id":"basics/contract-template","title":"Contract Template","description":"On this page we\'ll go over how to create a basic contract and explain","sidebar":"reference"},"basics/cross-contract-calling":{"id":"basics/cross-contract-calling","title":"Cross-Contract Calling","description":"In ink! contracts it is possible to call messages and constructors of other","sidebar":"reference"},"basics/debugging":{"id":"basics/debugging","title":"Contract Debugging","description":"There are three ways to debug your ink! contract currently:","sidebar":"reference"},"basics/env-functions":{"id":"basics/env-functions","title":"Environment Functions","description":"ink! exposes a number of handy environment functions.","sidebar":"reference"},"basics/environment":{"id":"basics/environment","title":"Chain Environment Types","description":"If you write a contract for a chain that deviates from the default","sidebar":"reference"},"basics/events":{"id":"basics/events","title":"Events","description":"An ink! smart contract may define events that it can emit during contract execution.","sidebar":"reference"},"basics/metadata":{"id":"basics/metadata","title":"Metadata","description":"The ink! metadata is used to describe a contract in a language agnostic way. It is","sidebar":"reference"},"basics/mutating-values":{"id":"basics/mutating-values","title":"Mutating Storage Values","description":"It\'s time to modify some storage!","sidebar":"reference"},"basics/reading-values":{"id":"basics/reading-values","title":"Reading Values from Storage","description":"Reading from storage is where the fun begins!","sidebar":"reference"},"basics/selectors":{"id":"basics/selectors","title":"Selectors","description":"Selectors in ink! are a language agnostic way of identifying constructors and messages.","sidebar":"reference"},"basics/storing-values":{"id":"basics/storing-values","title":"Storing Values","description":"Here is how you store simple values in storage:","sidebar":"reference"},"basics/testing":{"id":"basics/testing","title":"Contract Testing","description":"ink! supports three different stages of testing: unit, integration","sidebar":"reference"},"basics/trait-definitions":{"id":"basics/trait-definitions","title":"Trait Definitions","description":"Through the #[ink::trait_definition] proc. macro it is now possible to define your very own trait definitions that are then implementable by ink! smart contracts.","sidebar":"reference"},"basics/upgradeability":{"id":"basics/upgradeability","title":"Upgradeable Contracts","description":"Even though smart contracts are intended to be immutable by design,","sidebar":"reference"},"basics/verification/contract-verification":{"id":"basics/verification/contract-verification","title":"Contract Verification","description":"Contract verification is the process of matching a deployed ink! contract","sidebar":"reference"},"basics/verification/sirato":{"id":"basics/verification/sirato","title":"Sirato","description":"Web3 Labs have made available a public version of their","sidebar":"reference"},"brand-assets/cargo-contract":{"id":"brand-assets/cargo-contract","title":"cargo-contract","description":"cargo-contract Logo","sidebar":"reference"},"brand-assets/community-badges":{"id":"brand-assets/community-badges","title":"Community Badges","description":"If you have a public repository with an ink! contract it would be awesome","sidebar":"reference"},"brand-assets/ink":{"id":"brand-assets/ink","title":"ink!","description":"Our primary logo is our squid mascot (named \\"Squink\\") plus our text logo.","sidebar":"reference"},"brand-assets/stickers":{"id":"brand-assets/stickers","title":"Stickers","description":"Download here: ink-stickers-2022.svg.","sidebar":"reference"},"datastructures/custom":{"id":"datastructures/custom","title":"Custom Data Structures","description":"The ink_storage crate provides useful utilities and data structures to organize and","sidebar":"reference"},"datastructures/mapping":{"id":"datastructures/mapping","title":"Working with Mapping","description":"In this section we demonstrate how to work with ink! Mapping.","sidebar":"reference"},"datastructures/overview":{"id":"datastructures/overview","title":"Overview","description":"The ink_storage crate acts as the standard storage library for ink! smart contracts.","sidebar":"reference"},"datastructures/storage-in-metadata":{"id":"datastructures/storage-in-metadata","title":"Metadata Format","description":"The storage layout of a contract is reflected inside the metadata. It allows third-party","sidebar":"reference"},"datastructures/storage-layout":{"id":"datastructures/storage-layout","title":"Storage Layout","description":"Smart contract authors are given some flexibility in regards on how they want to organize","sidebar":"reference"},"examples/contracts":{"id":"examples/contracts","title":"Smart Contracts","description":"We have a repository ink-examples,","sidebar":"reference"},"examples/dapps":{"id":"examples/dapps","title":"DApps","description":"We\'ll point to a couple full-stack dApp examples here.","sidebar":"reference"},"faq/faq":{"id":"faq/faq","title":"Frequently Asked Questions","description":"Who is \\"Squink\\"?","sidebar":"reference"},"faq/migrating-from-ink-3-to-4":{"id":"faq/migrating-from-ink-3-to-4","title":"Migrating from ink! 3.x to 4.0","description":"We\'ve made a couple of breaking changes from ink! 3.x to ink! 4.0.","sidebar":"reference"},"frontend/overview":{"id":"frontend/overview","title":"Overview","description":"Now after you wrote, compiled and deployed your smart contract, it is time to craft a user experience around it.","sidebar":"reference"},"getting-started/calling":{"id":"getting-started/calling","title":"Call Your Contract","description":"Now that your contract has been fully deployed, we can start interacting with it! Flipper only has","sidebar":"reference"},"getting-started/cargo-contract":{"id":"getting-started/cargo-contract","title":"Install cargo-contract","description":"cargo-contract is a command-line (CLI) tool which helps you set up and manage"},"getting-started/compiling":{"id":"getting-started/compiling","title":"Compile Your Contract","description":"Run the following command in your flipper directory to compile your smart contract:","sidebar":"reference"},"getting-started/creating":{"id":"getting-started/creating","title":"Creating an ink! Project","description":"ink! is an Embedded Domain Specific Language (EDSL) that you can use to write WebAssembly based smart contracts in the Rust programming language.","sidebar":"reference"},"getting-started/deploying":{"id":"getting-started/deploying","title":"Deploy Your Contract","description":"Now that we have generated the Wasm binary from our source code and connected to a local node, we want","sidebar":"reference"},"getting-started/running":{"id":"getting-started/running","title":"Run a Substrate Node","description":"The substrate-contracts-node","sidebar":"reference"},"getting-started/setup":{"id":"getting-started/setup","title":"Setup","description":"In case you are looking for a guided tutorial directed","sidebar":"reference"},"getting-started/troubleshooting":{"id":"getting-started/troubleshooting","title":"Troubleshooting","description":"Here are solutions to some of the common problems you may come across:","sidebar":"reference"},"inkubator/overview":{"id":"inkubator/overview","title":"Kickstart your project!","description":"ink!ubator is an initiative funded by the Polkadot Treasury\'s Bounty Program. It is designed to kickstart the ink! ecosystem on Polkadot, Kusama, and other Substrate chains.","sidebar":"reference"},"intro/how-it-works":{"id":"intro/how-it-works","title":"How it Works \u2013 Substrate","description":"ink! is a programming language for smart contracts; blockchains built with the Substrate framework","sidebar":"reference"},"intro/ink-vs-cosmwasm":{"id":"intro/ink-vs-cosmwasm","title":"ink! vs. CosmWasm","description":"This is a short comparison between ink!","sidebar":"reference"},"intro/ink-vs-solidity":{"id":"intro/ink-vs-solidity","title":"ink! vs. Solidity","description":"The following table gives a brief comparison of features between ink! and Solidity:","sidebar":"reference"},"intro/intro":{"id":"intro/intro","title":"Welcome!","description":"&nbsp;","sidebar":"reference"},"intro/migrate-to-parachain":{"id":"intro/migrate-to-parachain","title":"Migrating an ink! contract to a Parachain Runtime","description":"Smart contracts written in ink! are a great starting point for developing applications in the Polkadot ecosystem. Developers can go from an idea to a fully functioning web3 application \\"in production\\" in a matter of hours or days. This allows faster feedback on ideas, to validate whether there is user demand in the first place, and to easily iterate and refine the implementation.","sidebar":"reference"},"intro/polkadot":{"id":"intro/polkadot","title":"Smart Contracts in Polkadot","description":"One of the first questions we typically get when somebody learns about Substrate, Polkadot, or Kusama is when to develop a parachain vs. when to develop a smart contract.","sidebar":"reference"},"intro/upcoming-events":{"id":"intro/upcoming-events","title":"Upcoming Events","description":"April 5, 2023 | Office Hours"},"intro/why-rust":{"id":"intro/why-rust","title":"Why Rust for Smart Contracts?","description":"ink! chooses not to invent a new programming language, but rather adapt a subset of Rust to serve our purpose.","sidebar":"reference"},"intro/why-webassembly":{"id":"intro/why-webassembly","title":"Why WebAssembly for Smart Contracts?","description":"We made a conscious decision for WebAssembly as the target architecture of ink!.","sidebar":"reference"},"macros-attributes/anonymous":{"id":"macros-attributes/anonymous","title":"#[ink(anonymous)]","description":"Applicable to ink! events.","sidebar":"reference"},"macros-attributes/chain-extension":{"id":"macros-attributes/chain-extension","title":"#[ink::chain_extension]","description":"In the default configuration of the contracts-pallet a smart contract can only interact with the runtime","sidebar":"reference"},"macros-attributes/constructor":{"id":"macros-attributes/constructor","title":"#[ink(constructor)]","description":"Applicable to a method.","sidebar":"reference"},"macros-attributes/contract":{"id":"macros-attributes/contract","title":"#[ink::contract]","description":"[ink::contract]","sidebar":"reference"},"macros-attributes/default":{"id":"macros-attributes/default","title":"#[ink(default)]","description":"Applicable to ink! messages and constructors.","sidebar":"reference"},"macros-attributes/event":{"id":"macros-attributes/event","title":"#[ink(event)]","description":"Applicable on struct definitions.","sidebar":"reference"},"macros-attributes/implementation":{"id":"macros-attributes/implementation","title":"#[ink(impl)]","description":"This attribute supports a niche case that is rarely needed.","sidebar":"reference"},"macros-attributes/message":{"id":"macros-attributes/message","title":"#[ink(message)]","description":"Applicable to methods.","sidebar":"reference"},"macros-attributes/namespace":{"id":"macros-attributes/namespace","title":"#[ink(namespace = \\"\u2026\\")]","description":"Applicable to ink! trait implementation blocks.","sidebar":"reference"},"macros-attributes/overview":{"id":"macros-attributes/overview","title":"Overview","description":"An ink! module is the module that is flagged by #[ink::contract] containing all the ink! definitions.","sidebar":"reference"},"macros-attributes/payable":{"id":"macros-attributes/payable","title":"#[ink(payable)]","description":"Applicable to ink! messages.","sidebar":"reference"},"macros-attributes/selector":{"id":"macros-attributes/selector","title":"#[ink(selector = S:u32)]","description":"Applicable to ink! messages and ink! constructors.","sidebar":"reference"},"macros-attributes/storage":{"id":"macros-attributes/storage","title":"#[ink(storage)]","description":"Applicable on struct definitions.","sidebar":"reference"},"macros-attributes/topic":{"id":"macros-attributes/topic","title":"#[ink(topic)]","description":"Applied on fields of ink! event types to indicate that they are topics.","sidebar":"reference"},"monthly-update/2022/03":{"id":"monthly-update/2022/03","title":"March \'22","description":"StackExchange Beta"},"monthly-update/2022/04":{"id":"monthly-update/2022/04","title":"April \'22","description":"Releases \ud83c\udd95"},"monthly-update/2022/05":{"id":"monthly-update/2022/05","title":"May \'22","description":"Workshops & Talks \ud83c\udfa4"},"monthly-update/2022/06":{"id":"monthly-update/2022/06","title":"June \'22","description":"ink! smart contracts in production on Kusama \ud83c\udf89"},"monthly-update/2022/07":{"id":"monthly-update/2022/07","title":"July \'22","description":"\ud83c\udf0c Roloi migrates from CosmWasm to ink!"},"monthly-update/2022/08":{"id":"monthly-update/2022/08","title":"August \'22","description":"Releases \ud83d\udea2"},"monthly-update/2022/09":{"id":"monthly-update/2022/09","title":"September \'22","description":"One thousand GitHub stars \ud83e\udd29"},"monthly-update/2022/10":{"id":"monthly-update/2022/10","title":"October \'22","description":"Polkadot Blockchain Academy: Jan/Feb \'23 \ud83c\udf93"},"monthly-update/2022/11":{"id":"monthly-update/2022/11","title":"November \'22","description":"ink! v4.0.0-beta \ud83e\udd91"},"monthly-update/2022/12":{"id":"monthly-update/2022/12","title":"December \'22","description":"Happy Holidays! \ud83c\udf8a"},"monthly-update/2023/01":{"id":"monthly-update/2023/01","title":"January \'23","description":"ink! x OpenZeppelin \ud83d\udd0f"},"monthly-update/2023/02":{"id":"monthly-update/2023/02","title":"February \'23","description":"ink! 4.0 + cargo-contract 2.0 released! \ud83e\udd73"},"monthly-update/2023/03":{"id":"monthly-update/2023/03","title":"March \'23","description":"Community Meetup in Berlin \ud83d\udce3"},"monthly-update/archive":{"id":"monthly-update/archive","title":"Archive","description":"2022"},"monthly-update/overview":{"id":"monthly-update/overview","title":"Overview","description":"Hey there reader \ud83d\udc4b!"},"testnet/faucet":{"id":"testnet/faucet","title":"Faucet","description":"We are operating a faucet for our Contracts Testnet on Rococo.","sidebar":"reference"},"testnet/overview":{"id":"testnet/overview","title":"Contracts on Rococo","description":"Rococo is a testnet for","sidebar":"reference"},"third-party-tools/contract-wizard/index":{"id":"third-party-tools/contract-wizard/index","title":"Polkadot Contract Wizard","description":"What is the Polkadot Contract Wizard?","sidebar":"reference"},"third-party-tools/ink-analyzer":{"id":"third-party-tools/ink-analyzer","title":"ink! Analyzer","description":"ink! analyzer is a collection of modular and reusable libraries and tools for semantic analysis of ink! smart contract code.","sidebar":"reference"},"third-party-tools/inkathon":{"id":"third-party-tools/inkathon","title":"ink!athon DApp Boilerplate","description":"ink!athon is a starter kit for full-stack dApp development with ink! smart contracts and a React-based frontend in one place. With convenient helper scripts and a pre-configured project setup, it lets you scaffold any dApp quickly. It\'s developed by the same team that is behind AZERO.ID, where this boilerplate is used in production.","sidebar":"reference"},"third-party-tools/openbrush":{"id":"third-party-tools/openbrush","title":"OpenBrush","description":"[OpenBrush] is a library for smart contract development on ink! maintained by the","sidebar":"reference"},"third-party-tools/subwallet":{"id":"third-party-tools/subwallet","title":"SubWallet","description":"SubWallet is a comprehensive non-custodial wallet designed for the Polkadot, Substrate, and Ethereum ecosystems. It provides support for importing, managing, and interacting with various smart contract types, including PSP22 and PSP34.","sidebar":"reference"},"third-party-tools/swanky/cli":{"id":"third-party-tools/swanky/cli","title":"Swanky CLI","description":"Swanky CLI is a Node.js based CLI application that abstracts away and extends the functionality of Polkadot.js, cargo contract, and other Wasm developer tools.","sidebar":"reference"},"third-party-tools/swanky/index":{"id":"third-party-tools/swanky/index","title":"Swanky Suite","description":"Swanky Suite aims to be an \\"all-in-one\\" tool for Wasm smart contract developers. It is based on existing tools like cargo contract CLI and polkadot.js but extends their functionality with many additional features such as smart contract templates, and an instant finality (Swanky) node, which reduces the contract development lifecycle.","sidebar":"reference"},"third-party-tools/swanky/node":{"id":"third-party-tools/swanky/node","title":"Swanky Node","description":"Swanky Node is a Substrate based blockchain configured to enable pallet-contracts (a smart contract module), and other features that assist local development of Wasm smart contracts.","sidebar":"reference"}}}}')}}]);