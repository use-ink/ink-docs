"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[760],{80118:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"faq/migrating-from-ink-5-to-6","title":"Migration: ink! v5 \u2192 v6","description":"We\'ve made a number of breaking changes from ink! 5.x to ink! 6.0.","source":"@site/versioned_docs/version-v6/faq/migrating-from-ink-5-to-6.md","sourceDirName":"faq","slug":"/faq/migrating-from-ink-5-to-6","permalink":"/docs/v6/faq/migrating-from-ink-5-to-6","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/faq/migrating-from-ink-5-to-6.md","tags":[],"version":"v6","frontMatter":{"title":"Migration: ink! v5 \u2192 v6","slug":"/faq/migrating-from-ink-5-to-6"},"sidebar":"reference","previous":{"title":"Polkadot Scalability Hackathon","permalink":"/docs/v6/polkadot-scalability-hackathon"},"next":{"title":"Setup","permalink":"/docs/v6/getting-started/setup"}}');var s=t(74848),o=t(28453),a=t(29030);const c={title:"Migration: ink! v5 \u2192 v6",slug:"/faq/migrating-from-ink-5-to-6"},r=void 0,d={},l=[{value:"How to upgrade",id:"how-to-upgrade",level:2},{value:"Compatibility",id:"compatibility",level:2},{value:"How do I find out if a chain is compatible with ink! 6.0?",id:"how-do-i-find-out-if-a-chain-is-compatible-with-ink-60",level:3},{value:"<code>cargo-contract</code> v6",id:"cargo-contract-v6",level:3},{value:"Tooling &amp; Libraries",id:"tooling--libraries",level:3},{value:"Important Changes",id:"important-changes",level:2},{value:"Restrict which <code>cfg</code> attributes can be used",id:"restrict-which-cfg-attributes-can-be-used",level:3},{value:"Metadata Changes",id:"metadata-changes",level:3},{value:"Types",id:"types",level:3},{value:"Contract Balance: <code>U256</code>",id:"contract-balance-u256",level:4},{value:"Contract Address: <code>H160</code>",id:"contract-address-h160",level:4},{value:"Contract Hash: <code>H256</code>",id:"contract-hash-h256",level:4},{value:"Contract delegates can no longer be done by code",id:"contract-delegates-can-no-longer-be-done-by-code",level:3},{value:"Feature <code>ink/unstable-hostfn</code>",id:"feature-inkunstable-hostfn",level:3},{value:"New debugging workflow",id:"new-debugging-workflow",level:3},{value:"Removed Events",id:"removed-events",level:3},{value:"<code>no_main</code>",id:"no_main",level:3},{value:"<code>substrate-contracts-node</code> can no longer be used",id:"substrate-contracts-node-can-no-longer-be-used",level:3},{value:"Solang can no longer be used",id:"solang-can-no-longer-be-used",level:3},{value:"Interesting New Features",id:"interesting-new-features",level:2},{value:"Cross-contract calling Solidity contracts",id:"cross-contract-calling-solidity-contracts",level:3},{value:"Generate Solidity metadata for an ink! contract",id:"generate-solidity-metadata-for-an-ink-contract",level:3},{value:"Abiility to build contract with features during E2E tests",id:"abiility-to-build-contract-with-features-during-e2e-tests",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("img",{src:(0,a.Ay)("/img/title/migration-5.x-to-6.0.svg"),className:"titlePic titleSpace",title:"Migration 5.x To 6.0 Title Picture"}),"\n",(0,s.jsx)(n.p,{children:"We've made a number of breaking changes from ink! 5.x to ink! 6.0.\nOn this page we outline how you can migrate existing dApps and\ncontracts."}),"\n",(0,s.jsxs)(n.p,{children:["The biggest change is that we've migrated from ",(0,s.jsx)(n.code,{children:"pallet-contracts"})," +\nWebAssembly (executed in ",(0,s.jsx)(n.code,{children:"wasmi"}),") to ",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkadot-sdk/tree/master/substrate/frame/revive",children:(0,s.jsx)(n.code,{children:"pallet-revive"})})," +\nRISC-V (executed in ",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkavm/",children:"PolkaVM"}),").\n",(0,s.jsxs)(n.em,{children:["This is a major breaking change, ink! v6 is only compatible with ",(0,s.jsx)(n.code,{children:"cargo-contract"})," >= v6\nand chains that include ",(0,s.jsx)(n.code,{children:"pallet-revive"}),"."]})]}),"\n",(0,s.jsxs)(n.p,{children:["We did a detailed write-up of the background to this development and the reasoning\n",(0,s.jsx)(n.a,{href:"https://use.ink/6.x/current-state",children:"here"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Compatibility of this release:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Rust >= 1.85"}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsxs)(n.a,{href:"https://github.com/use-ink/cargo-contract/releases/tag/v6.0.0-alpha",children:[(0,s.jsx)(n.code,{children:"cargo-contract"})," ",(0,s.jsx)(n.code,{children:"v6.0.0-alpha"})]})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink-node/commit/cd94b5fa23ee04f2d541decf1ace3b9904d61cb2",children:(0,s.jsx)(n.code,{children:"ink-node/cd94b5f"})})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkadot-sdk/commit/f8c90b2a01ec77579bccd21ae17bd6ff2eeffd6a",children:(0,s.jsx)(n.code,{children:"polkadot-sdk/f8c90b2a01ec77579bccd21ae17bd6ff2eeffd6a"})})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In the following we'll describe the breaking changes on a high-level. The\ncontext to understand them is that the ",(0,s.jsx)(n.code,{children:"pallet-revive"})," team has Ethereum/Solidity\nsupport as the number one priority. All their design decisions derive from that,\nthey don't want to maintain code that is unnecessary for that objective."]}),"\n",(0,s.jsxs)(n.p,{children:["You can find the full changelog of the 6.0 release ",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink/blob/master/CHANGELOG.md#version-600",children:"here"}),"."]}),"\n",(0,s.jsxs)(n.admonition,{type:"caution",children:[(0,s.jsx)(n.p,{children:"This migration guide only considers your code base! Not your storage data!"}),(0,s.jsx)(n.p,{children:"If you have an existing contract on-chain you might not be able to just\nupgrade the code on-chain, you possibly also have to migrate your storage data."})]}),"\n",(0,s.jsx)(n.h2,{id:"how-to-upgrade",children:"How to upgrade"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Change the dependency versions of ",(0,s.jsx)(n.code,{children:"ink"})," and ",(0,s.jsx)(n.code,{children:"ink_e2e"})," in your contracts ",(0,s.jsx)(n.code,{children:"Cargo.toml"})," to ",(0,s.jsx)(n.code,{children:"6"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Update your local ",(0,s.jsx)(n.code,{children:"cargo-contract"})," installation to 6.0."]}),"\n",(0,s.jsx)(n.li,{children:"Read through this page."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"compatibility",children:"Compatibility"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:">= polkadot-v1.9.0"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"pallet-contracts >= polkadot-v0.9.37"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"ink-node >= v0.24.0"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"how-do-i-find-out-if-a-chain-is-compatible-with-ink-60",children:"How do I find out if a chain is compatible with ink! 6.0?"}),"\n",(0,s.jsxs)(n.p,{children:["You can query ",(0,s.jsx)(n.code,{children:"contracts::palletVersion()"})," via the chain state RPCs. It has to\nbe ",(0,s.jsx)(n.code,{children:">= 9"})," for ink! 5.0 to be compatible, if you don't use any of the four functions\nmentioned above.\nFor the above mentioned four functions please see the respective sections on this page,\nthere we explain how to find out if a chain supports them there."]}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.a,{href:"https://polkadot.js.org/apps/",children:"polakdot.js app"})," to connect to the chain and check if\n",(0,s.jsx)(n.code,{children:"reviveApi"})," is available under Developer \xbb Runtime calls."]}),"\n",(0,s.jsx)("img",{src:(0,a.Ay)("/img/pallet-revive-available.png")}),"\n",(0,s.jsx)(n.p,{children:"The following chains are in production and support ink! 6.0."}),"\n",(0,s.jsxs)("div",{className:"row",children:[(0,s.jsx)("div",{className:"col text--center",children:(0,s.jsx)("a",{href:"https://onpop.io",children:(0,s.jsx)("img",{src:(0,a.Ay)("/img/chains/polkadot-pop-network.svg"),className:"chain"})})}),(0,s.jsx)("div",{className:"col text--center",children:(0,s.jsx)("a",{href:"https://kusama.network/",children:(0,s.jsx)("img",{src:(0,a.Ay)("/img/chains/kusama-assethub.svg"),className:"chain"})})})]}),"\n",(0,s.jsxs)(n.h3,{id:"cargo-contract-v6",children:[(0,s.jsx)(n.code,{children:"cargo-contract"})," v6"]}),"\n",(0,s.jsxs)(n.p,{children:["Together with ink! 6.0 we've released ",(0,s.jsx)(n.code,{children:"cargo-contract"})," 6.0.\nYou have to use ",(0,s.jsx)(n.code,{children:"cargo-contract"})," >= 6.0 for ink! 6.0 contracts!"]}),"\n",(0,s.jsx)(n.p,{children:"You can upgrade via:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"cargo install cargo-contract --version ^6 --locked\n"})}),"\n",(0,s.jsx)(n.h3,{id:"tooling--libraries",children:"Tooling & Libraries"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Stable Rust >= 1.85"}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"cargo-contract"})," >= v6.0"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"polkadot-js/api"})," and ",(0,s.jsx)(n.code,{children:"polkadot-js/api-contract"}),": no support yet"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/scio-labs/use-inkathon",children:(0,s.jsx)(n.code,{children:"use-inkathon"})}),": no support yet"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://inkathon.xyz/",children:"ink!athon"}),": no support yet"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"important-changes",children:"Important Changes"}),"\n",(0,s.jsx)(n.p,{children:"We had to introduce a number of changes that require you to manually upgrade\nyour contract from 5.x to 6.0. The steps are explained in this section."}),"\n",(0,s.jsxs)(n.h3,{id:"restrict-which-cfg-attributes-can-be-used",children:["Restrict which ",(0,s.jsx)(n.code,{children:"cfg"})," attributes can be used"]}),"\n",(0,s.jsxs)(n.p,{children:["This change was done as a recommendation from the ink! 5.x audit.\nIn a nutshell it prevents developers from hiding functionality in a contract,\nthat would not be visible in the metadata (so e.g. on a block explorer).\nThe relevant PR is ",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink/pull/2313",children:"#2313"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["From ink! 6.0 on only these attributes are allowed in ",(0,s.jsx)(n.code,{children:"#[cfg(\u2026)]"}),": - ",(0,s.jsx)(n.code,{children:"test"})," - ",(0,s.jsx)(n.code,{children:"feature"})," (without ",(0,s.jsx)(n.code,{children:"std"}),") - ",(0,s.jsx)(n.code,{children:"any"})," - ",(0,s.jsx)(n.code,{children:"not"})," - ",(0,s.jsx)(n.code,{children:"all"})]}),"\n",(0,s.jsx)(n.h3,{id:"metadata-changes",children:"Metadata Changes"}),"\n",(0,s.jsxs)(n.p,{children:["The field ",(0,s.jsx)(n.code,{children:"source.wasm"})," was renamed to ",(0,s.jsx)(n.code,{children:"source.contract_binary"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,s.jsxs)(n.h4,{id:"contract-balance-u256",children:["Contract Balance: ",(0,s.jsx)(n.code,{children:"U256"})]}),"\n",(0,s.jsxs)(n.p,{children:["For the type of a contract's balance, ",(0,s.jsx)(n.code,{children:"pallet-revive"})," uses depending on the context"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["either the configured ",(0,s.jsx)(n.code,{children:"pallet_revive::Config::Currency"})," type (which corresponds\nto the ",(0,s.jsx)(n.code,{children:"ink::Environment::Balance"})," type."]}),"\n",(0,s.jsxs)(n.li,{children:["or a hardcoded ",(0,s.jsx)(n.code,{children:"U256"})," (which corresponds to what Ethereum uses).\nIn this alpha release we just adhere to requiring the types that ",(0,s.jsx)(n.code,{children:"pallet-revive"})," uses.\nIn an upcoming beta release this could be simplified to reduce UX friction by just\nusing one type everywhere and converting to the ",(0,s.jsx)(n.code,{children:"pallet-revive"})," one."]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"contract-address-h160",children:["Contract Address: ",(0,s.jsx)(n.code,{children:"H160"})]}),"\n",(0,s.jsxs)(n.p,{children:["For a contract's account, ",(0,s.jsx)(n.code,{children:"pallet-revive"})," is using either the configured ",(0,s.jsx)(n.code,{children:"AccountId"})," type\nof the ",(0,s.jsx)(n.code,{children:"polkadot-sdk"})," runtime, or ",(0,s.jsx)(n.code,{children:"H160"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Finding the ",(0,s.jsx)(n.code,{children:"H160"})," for an ",(0,s.jsx)(n.code,{children:"AccountId"})," is done via an address derivation scheme derived in\n",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkadot-sdk/pull/7662",children:"#7662"}),".\nAfter instantiating a contract, the address is no longer returned by ",(0,s.jsx)(n.code,{children:"pallet-revive"}),".\nInstead one has to derive it from given parameters (see the linked PR). ",(0,s.jsx)(n.code,{children:"cargo-contract"}),"\ndoes that automatically."]}),"\n",(0,s.jsxs)(n.p,{children:["For contract instantiations and contract calls the pallet requires that a 1-to-1 mapping\nof an ",(0,s.jsx)(n.code,{children:"AccountId"})," to a ",(0,s.jsx)(n.code,{children:"H160"})," has been created. This can be done via the ",(0,s.jsx)(n.code,{children:"map_account"}),"/\n",(0,s.jsx)(n.code,{children:"unmap_account"})," API.\nThe PR ",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkadot-sdk/pull/6096",children:"#6096"})," contains more\ninformation."]}),"\n",(0,s.jsxs)(n.p,{children:["Besides the publicly exposed crate functions, we've introduced a new subcommand\n",(0,s.jsx)(n.code,{children:"cargo contract account"})," that allows resolving the ",(0,s.jsx)(n.code,{children:"H160"})," contract address to the\nPolkadot SDK ",(0,s.jsx)(n.code,{children:"AccountId"})," which it is mapped to."]}),"\n",(0,s.jsxs)(n.h4,{id:"contract-hash-h256",children:["Contract Hash: ",(0,s.jsx)(n.code,{children:"H256"})]}),"\n",(0,s.jsxs)(n.p,{children:["For a contract's hash value, ",(0,s.jsx)(n.code,{children:"pallet-revive"})," uses a fixed ",(0,s.jsx)(n.code,{children:"H256"}),", Previously,\nthe ",(0,s.jsx)(n.code,{children:"ink::Environment::Hash"})," type referenced the hash type being used for the\ncontract's hash. Now it's just a fixed ",(0,s.jsx)(n.code,{children:"H160"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"contract-delegates-can-no-longer-be-done-by-code",children:"Contract delegates can no longer be done by code"}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"pallet-contracts"})," (and hence up until ink! v5), a pattern for upgradeable\ncontracts was to delegate the contract execution to a different code, e.g. to\na new version of the contract's code."]}),"\n",(0,s.jsxs)(n.p,{children:["This distinction of contract code that was uploaded to a chain vs. an instantiated\ncontract from this code no longer exists in ",(0,s.jsx)(n.code,{children:"pallet-revive"}),". If you want to\ndelegate the execution, you will have to specify another contract's address\nto which code you want to delegate to. This other contract needs to be instantiated\non-chain."]}),"\n",(0,s.jsx)(n.p,{children:"For the execution, the context of the contract that delegates will continue\nto be used (storage, caller, value)."}),"\n",(0,s.jsx)(n.p,{children:"Specifically the delegate API changed like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:"/// ink! v5\n#[derive(Clone)]\npub struct DelegateCall<E: Environment> {\n    code_hash: E::Hash,\n    call_flags: CallFlags,\n}\n\n/// ink! v6\n#[derive(Clone)]\npub struct DelegateCall {\n    address: H160,\n    flags: CallFlags,\n    ref_time_limit: u64,\n    proof_size_limit: u64,\n    deposit_limit: Option<[u8; 32]>,\n}\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"feature-inkunstable-hostfn",children:["Feature ",(0,s.jsx)(n.code,{children:"ink/unstable-hostfn"})]}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.code,{children:"pallet-revive"})," a number of functions can only be called by smart contracts\nif the chain that the pallet is running on has enabled the feature\n",(0,s.jsx)(n.code,{children:"pallet-revive/unstable-hostfn"}),".\nThis feature is not enabled on Kusama or Westend!"]}),"\n",(0,s.jsxs)(n.p,{children:["It is enabled for the ",(0,s.jsx)(n.code,{children:"ink-node"})," version that we linked above."]}),"\n",(0,s.jsx)(n.h3,{id:"new-debugging-workflow",children:"New debugging workflow"}),"\n",(0,s.jsxs)(n.p,{children:["Previously ",(0,s.jsx)(n.code,{children:"pallet-contracts"})," returned a ",(0,s.jsx)(n.code,{children:"debug_message"})," field with contract\ninstantiations and dry-runs.\nWhenever ",(0,s.jsx)(n.code,{children:"ink::env::debug_println"})," was invoked in a contract, ink! wrote debugging\ninfo to this field. This functionality has been removed. Instead ",(0,s.jsx)(n.code,{children:"pallet-revive"})," now\nsupports other means of debugging."]}),"\n",(0,s.jsxs)(n.p,{children:["The most relevant new debugging workflow is the tracing API. There are a number\nof PRs that implemented it, so we won't link a specific one here. A good starting\npoint to look deeper into it is the ",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkadot-sdk/blob/master/substrate/frame/revive/src/tracing.rs",children:(0,s.jsx)(n.code,{children:"tracing.rs"})}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["We have implemented barebones support for this tracing API in the 6.0.0-alpha\nversions of ink! + ",(0,s.jsx)(n.code,{children:"cargo-contract"}),". But it's really barebones and should\ncertainly be improved before a production release."]}),"\n",(0,s.jsxs)(n.p,{children:["We've updated ",(0,s.jsx)(n.a,{href:"/docs/v6/contract-debugging/",children:"the Debugging chapter"})," of this documentation\nto reflect the new workflow.\nWe've also added a contract example to illustrate these new debugging strategies:\n",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink/tree/master/integration-tests/public/debugging-strategies",children:(0,s.jsx)(n.code,{children:"debugging-strategies"})}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"removed-events",children:"Removed Events"}),"\n",(0,s.jsxs)(n.p,{children:["In ",(0,s.jsx)(n.a,{href:"https://github.com/paritytech/polkadot-sdk/pull/7164",children:"#7164"}),", Parity removed\nmost smart-contract-specific events: ",(0,s.jsx)(n.code,{children:"Called"}),", ",(0,s.jsx)(n.code,{children:"ContractCodeUpdated, CodeStored"}),",\n",(0,s.jsx)(n.code,{children:"CodeRemoved"}),", ",(0,s.jsx)(n.code,{children:"Terminated"}),", ",(0,s.jsx)(n.code,{children:"Instantiated"}),", ",(0,s.jsx)(n.code,{children:"DelegateCalled"}),",\n",(0,s.jsx)(n.code,{children:"StorageDepositTransferredAndHeld"}),", ",(0,s.jsx)(n.code,{children:"StorageDepositTransferredAndReleased"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ContractEmitted"})," event (for events a contract emits) is still available."]}),"\n",(0,s.jsx)(n.h3,{id:"no_main",children:(0,s.jsx)(n.code,{children:"no_main"})}),"\n",(0,s.jsx)(n.p,{children:"Previously ink! contracts started with this line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#![cfg_attr(not(feature = "std"), no_std)]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This line instructs the Rust compiler to not link the Rust\nstandard library with your contract.\nIf you want to know about why:\nwe have an entry\n",(0,s.jsx)(n.a,{href:"/docs/v6/faq",children:'"Why is Rust\'s standard library (stdlib) not available in ink!?"'}),"\nin our FAQ."]}),"\n",(0,s.jsx)(n.p,{children:"With ink! v6, an additional crate-level attribute needs to be set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#![cfg_attr(not(feature = "std"), no_std, no_main)]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["It instructs the compiler not to use the default ",(0,s.jsx)(n.code,{children:"fn main() {}"})," function as the\nentry point for your smart contract. This is needed because PolkaVM uses a different\nentry point (the ",(0,s.jsx)(n.code,{children:"deploy"})," function)."]}),"\n",(0,s.jsxs)(n.h3,{id:"substrate-contracts-node-can-no-longer-be-used",children:[(0,s.jsx)(n.code,{children:"substrate-contracts-node"})," can no longer be used"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"substrate-contracts-node"})," is still maintained by Parity for ink! v5 and\n",(0,s.jsx)(n.code,{children:"pallet-contracts"}),", but it does not support ",(0,s.jsx)(n.code,{children:"pallet-revive"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["We've set up a new project in its place: ",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink-node",children:(0,s.jsx)(n.code,{children:"ink-node"})}),".\nAs before, it functions as a simple local development node.\nIt contains ",(0,s.jsx)(n.code,{children:"pallet-revive"})," in a default configuration.\nYou can find binary releases of the node ",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink-node/releases",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"solang-can-no-longer-be-used",children:"Solang can no longer be used"}),"\n",(0,s.jsxs)(n.p,{children:["It was previously possible to interact with Solidity contracts compiled via the\nSolang compiler. As we have moved from WebAssembly/",(0,s.jsx)(n.code,{children:"pallet-contracts"})," to\nPolkaVM/RISC-V/",(0,s.jsx)(n.code,{children:"pallet-revive"}),", users who want to deploy Solidity will use\n",(0,s.jsxs)(n.a,{href:"https://github.com/paritytech/revive",children:["the Parity ",(0,s.jsx)(n.code,{children:"revive"})," compiler"]}),". It takes\nSolidity contracts and compile them into RISC-V for PolkaVM."]}),"\n",(0,s.jsx)(n.h2,{id:"interesting-new-features",children:"Interesting New Features"}),"\n",(0,s.jsx)(n.h3,{id:"cross-contract-calling-solidity-contracts",children:"Cross-contract calling Solidity contracts"}),"\n",(0,s.jsxs)(n.p,{children:["We are introducing a new attribute ",(0,s.jsx)(n.code,{children:"abi"})," for the ",(0,s.jsx)(n.code,{children:"#[ink::contract]"})," macro.\nThese are the values it takes:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#[ink::contract(abi = "all")]\n#[ink::contract(abi = "sol")]\n#[ink::contract(abi = "ink")]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["The default currently is ",(0,s.jsx)(n.code,{children:'abi = "ink"'}),", but we might change this before a production\nrelease."]}),"\n",(0,s.jsx)(n.p,{children:"The implication of supporting Solidity ABI encoding is that there is a restriction on\nthe types you can use as constructor/message arguments or return types.\nYou won't be able to use Rust types for which no mapping to a Solidity type exists.\nAn error about a missing trait implementation for this type will be thrown."}),"\n",(0,s.jsx)(n.p,{children:"Please note that your contract sizes will get larger if you support both the ink!\nand Solidity ABI."}),"\n",(0,s.jsx)(n.h3,{id:"generate-solidity-metadata-for-an-ink-contract",children:"Generate Solidity metadata for an ink! contract"}),"\n",(0,s.jsx)(n.p,{children:"We added a new subcommand:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ cargo contract build ---metadata <ink|solidity>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Please see ",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/cargo-contract/pull/1930",children:"#1930"})," for more information."]}),"\n",(0,s.jsx)(n.h4,{id:"abiility-to-build-contract-with-features-during-e2e-tests",children:"Abiility to build contract with features during E2E tests"}),"\n",(0,s.jsx)(n.p,{children:"We've added the possibility to set a feature to build a contract with during e2e tests:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-rust",children:'#[ink_e2e::test(features = ["debug-info"])]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This allows for e.g. emitting debug events in the contract, which\nyou can then check for in testing.\nPlease see our ",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink/tree/master/integration-tests/public/debugging-strategies",children:(0,s.jsx)(n.code,{children:"debugging-strategies"})}),"\nexample for a complete explainer."]}),"\n",(0,s.jsxs)(n.p,{children:["We've added a page ",(0,s.jsx)(n.a,{href:"/docs/v6/contract-debugging/debug-events",children:"Debugging \xbb Events"})," to this documentation.\nWe've also added a contract example that illustrates the usage:\n",(0,s.jsx)(n.a,{href:"https://github.com/use-ink/ink/tree/master/integration-tests/public/debugging-strategies",children:(0,s.jsx)(n.code,{children:"debugging-strategies"})}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var i=t(96540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);