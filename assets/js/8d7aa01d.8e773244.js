"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[3311],{19566:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"basics/metadata/solidity-format","title":"Solidity Format","description":"Metadata Title Picture","source":"@site/versioned_docs/version-v6/basics/metadata/solidity-format.md","sourceDirName":"basics/metadata","slug":"/basics/metadata/solidity","permalink":"/docs/v6/basics/metadata/solidity","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/basics/metadata/solidity-format.md","tags":[],"version":"v6","frontMatter":{"title":"Solidity Format","hide_title":true,"slug":"/basics/metadata/solidity"},"sidebar":"reference","previous":{"title":"ink! Format","permalink":"/docs/v6/basics/metadata/ink"},"next":{"title":"XCM","permalink":"/docs/v6/basics/xcm"}}');var a=i(74848),s=i(28453);const o={title:"Solidity Format",hide_title:!0,slug:"/basics/metadata/solidity"},c="Solidity Metadata Format",r={},d=[{value:"<code>&lt;contract-name&gt;.abi</code>",id:"contract-nameabi",level:2},{value:"<code>&lt;contract-name&gt;.json</code>",id:"contract-namejson",level:2},{value:"<code>settings.ink</code>",id:"settingsink",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"Metadata Title Picture",src:i(94094).A+"",width:"1600",height:"500"})}),"\n",(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"solidity-metadata-format",children:"Solidity Metadata Format"})}),"\n",(0,a.jsxs)(t.p,{children:["Solidity compatible metadata is generated by building a ",(0,a.jsx)(t.a,{href:"/docs/v6/background/solidity-metamask-compatibility",children:"Solidity ABI compatible ink! contract"})," using"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-shell",children:"$ cargo contract build ---metadata solidity\n"})}),"\n",(0,a.jsx)(t.p,{children:"This generates 2 metadata files in your contract's target directory:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<contract-name>.abi"}),": follows the ",(0,a.jsx)(t.a,{href:"https://docs.soliditylang.org/en/latest/abi-spec.html#json",children:"Solidity ABI JSON format"})," for describing a contract's interface.\nIt's used by tools for contract interaction (e.g. ",(0,a.jsx)(t.a,{href:"https://docs.ethers.org/",children:"ethers.js"}),")"]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"<contract-name>.json"}),": follows the ",(0,a.jsx)(t.a,{href:"https://docs.soliditylang.org/en/latest/metadata.html",children:"Solidity contract metadata specification"}),".\nIt's used for reproducible builds/compilation and verification of deployed contracts\n(e.g. by block explorers and contract verification tools)."]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["Generating Solidity metadata is only possible if all constructor and message\narguments and return types can be mapped to equivalent Solidity ABI types\n(",(0,a.jsx)(t.a,{href:"/docs/v6/background/solidity-metamask-compatibility#rustink-to-solidity-abi-type-mapping",children:"more details here"}),")."]})}),"\n",(0,a.jsx)(t.h2,{id:"contract-nameabi",children:(0,a.jsx)(t.code,{children:"<contract-name>.abi"})}),"\n",(0,a.jsxs)(t.p,{children:["The generated ",(0,a.jsx)(t.code,{children:"<contract-name>.abi"})," file follows the ",(0,a.jsx)(t.a,{href:"https://docs.soliditylang.org/en/latest/abi-spec.html#json",children:"Solidity ABI JSON format"}),".\nA notable distinction is that while ",(0,a.jsx)(t.a,{href:"/docs/v6/macros-attributes/constructor",children:"ink! contracts can have multiple constructors"}),",\nthe Solidity ABI JSON format only allows one, therefore the constructor annotated with\na ",(0,a.jsx)(t.a,{href:"/docs/v6/macros-attributes/default",children:(0,a.jsx)(t.code,{children:"#[default]"})})," attribute is used."]}),"\n",(0,a.jsx)(t.h2,{id:"contract-namejson",children:(0,a.jsx)(t.code,{children:"<contract-name>.json"})}),"\n",(0,a.jsxs)(t.p,{children:["The generated ",(0,a.jsx)(t.code,{children:"<contract-name>.json"})," file follows the ",(0,a.jsx)(t.a,{href:"https://docs.soliditylang.org/en/latest/metadata.html",children:"Solidity contract metadata specification"}),"\nwith the exception being that we repurpose the ",(0,a.jsx)(t.code,{children:'"settings"'})," key to include ink! contract and build info\nnamespaced under a ",(0,a.jsx)(t.code,{children:'"settings.ink"'})," key:"]}),"\n",(0,a.jsx)(t.h3,{id:"settingsink",children:(0,a.jsx)(t.code,{children:"settings.ink"})}),"\n",(0,a.jsxs)(t.p,{children:["It consists of the following ",(0,a.jsx)(t.strong,{children:"required"})," keys:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"hash"}),": The hash of the contract's binary.\n(The same content as ",(0,a.jsx)(t.a,{href:"/docs/v6/basics/metadata/ink#source",children:(0,a.jsx)(t.code,{children:"source.hash"})})," in ink! metadata format)."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"build_info"}),": Extra information about the environment in which the contract was built.\n(The same content as ",(0,a.jsx)(t.a,{href:"/docs/v6/basics/metadata/ink#source",children:(0,a.jsx)(t.code,{children:"source.build_info"})})," in ink! metadata format)."]}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:["It may ",(0,a.jsx)(t.em,{children:"optionally"})," include the following key:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"image"}),": If the contract is meant to be verifiable, then the Docker image is specified.\n(The same content as ",(0,a.jsx)(t.a,{href:"/docs/v6/basics/verification/contract-verification#verifiable-build",children:(0,a.jsx)(t.code,{children:"image"})})," in ink! metadata format,\nwhich is used for ",(0,a.jsx)(t.a,{href:"/docs/v6/basics/verification/contract-verification#verifiable-build",children:"verifiable builds"}),")."]}),"\n"]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["The ABI JSON content (i.e. the content of the ",(0,a.jsx)(t.code,{children:"<contract-name>.abi"})," file) is also contained\nin the ",(0,a.jsx)(t.code,{children:"<contract-name>.json"})," metadata file under the ",(0,a.jsx)(t.code,{children:'"output.abi"'})," key."]})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(96540);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}},94094:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/solidity-c214fe3b4dd74e70b39bbb135b78c5db.svg"}}]);