"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[4674],{27006:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"basics/abi/all","title":"\\"All\\" ABI Mode\\n","description":"Metadata Title Picture","source":"@site/versioned_docs/version-v6/basics/abi/all.md","sourceDirName":"basics/abi","slug":"/basics/abi/all","permalink":"/docs/v6/basics/abi/all","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/basics/abi/all.md","tags":[],"version":"v6","frontMatter":{"title":"\\"All\\" ABI Mode\\n","hide_title":true,"slug":"/basics/abi/all"},"sidebar":"reference","previous":{"title":"Solidity ABI","permalink":"/docs/v6/basics/abi/solidity"},"next":{"title":"Overview","permalink":"/docs/v6/basics/metadata"}}');var s=t(74848),o=t(28453);const a={title:'"All" ABI Mode\n',hide_title:!0,slug:"/basics/abi/all"},r='"All" ABI Mode',l={},c=[];function d(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"Metadata Title Picture",src:t(35344).A+"",width:"1600",height:"500"})}),"\n",(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"all-abi-mode",children:'"All" ABI Mode'})}),"\n",(0,s.jsxs)(i.p,{children:['The "all" ABI mode is declared in the contract\'s manifest file (i.e. the ',(0,s.jsx)(i.code,{children:"Cargo.toml"})," file)\nas follows:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-toml",children:'[package.metadata.ink-lang]\nabi = "all"\n'})}),"\n",(0,s.jsx)(i.p,{children:'When the "all" ABI is specified, the ink! code generator follows both\nthe ink! and Solidity ABI specifications, and generates entry points\nfor both calling conventions. This means:'}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["For each message, two selectors are generated, one for ",(0,s.jsx)(i.a,{href:"./ink",children:"ink!"}),"\nand another for ",(0,s.jsx)(i.a,{href:"./solidity",children:"Solidity"})," ABI."]}),"\n",(0,s.jsxs)(i.li,{children:["Each selector is ABI specific and its entry point uses the corresponding\ninput/output encoding/decoding scheme (i.e. entry points for ink! selectors use\nParity's ",(0,s.jsx)(i.a,{href:"https://docs.rs/parity-scale-codec/latest/parity_scale_codec",children:"SCALE Codec"}),", while entry points for Solidity selectors\nuse Solidity ABI encoding/decoding for input/output encoding/decoding)."]}),"\n",(0,s.jsxs)(i.li,{children:["Message selector manual overrides\n(using the ",(0,s.jsxs)(i.a,{href:"../../macros-attributes/selector",children:[(0,s.jsx)(i.code,{children:"selector"})," attribute"]}),") are respected for\nink! ABI entry points but ignored for Solidity ABI entry points\n(i.e. Solidity selectors are ",(0,s.jsx)(i.strong,{children:"always"})," generated according to the\n",(0,s.jsx)(i.a,{href:"https://docs.soliditylang.org/en/latest/abi-spec.html#function-selector",children:"Solidity ABI specification for function selectors"}),")."]}),"\n",(0,s.jsxs)(i.li,{children:["Call builders are generated for both ink! and Solidity ABI calling conventions,\nand a ",(0,s.jsx)(i.code,{children:"_sol"})," suffix is used to disambiguate Solidity calls."]}),"\n"]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsx)(i.p,{children:"Your contract sizes will get larger if you support both the ink! and Solidity ABI."})}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:['The "all" ABI mode can only be used if all constructor and message\nargument and return types, and event argument types can be mapped to\nequivalent Solidity ABI types (',(0,s.jsx)(i.a,{href:"/docs/v6/background/solidity-metamask-compatibility#rustink-to-solidity-abi-type-mapping",children:"more details here"}),")."]})})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>r});var n=t(96540);const s={},o=n.createContext(s);function a(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:i},e.children)}},35344:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/metadata-revive-2409587c8d292f13afb31073948c3ec6.svg"}}]);