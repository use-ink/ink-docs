"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[6428],{77660:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"background/solidity-metamask-compat","title":"Solidity & MetaMask Compatibility","description":"Metadata Title Picture","source":"@site/versioned_docs/version-v6/background/solidity-metamask-compat.md","sourceDirName":"background","slug":"/background/solidity-metamask-compatibility","permalink":"/docs/v6/background/solidity-metamask-compatibility","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/versioned_docs/version-v6/background/solidity-metamask-compat.md","tags":[],"version":"v6","frontMatter":{"title":"Solidity & MetaMask Compatibility","hide_title":true,"slug":"/background/solidity-metamask-compatibility"},"sidebar":"reference","previous":{"title":"Overview","permalink":"/docs/v6/standards/overview"},"next":{"title":"Why RISC-V and PolkaVM for Smart Contracts?","permalink":"/docs/v6/background/why-riscv-and-polkavm-for-smart-contracts"}}');var d=i(74848),n=i(28453);const r={title:"Solidity & MetaMask Compatibility",hide_title:!0,slug:"/background/solidity-metamask-compatibility"},c="Solidity & MetaMask Compatibility",o={},l=[{value:"Rust/ink! to Solidity ABI type mapping",id:"rustink-to-solidity-abi-type-mapping",level:2},{value:"Default/provided mappings",id:"defaultprovided-mappings",level:3},{value:"Mappings for arbitrary custom types",id:"mappings-for-arbitrary-custom-types",level:3},{value:"MetaMask",id:"metamask",level:2},{value:"Hardhat, Foundry, etc.",id:"hardhat-foundry-etc",level:2},{value:"Block explorers",id:"block-explorers",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(s,{children:[(0,d.jsx)("meta",{name:"description",content:"Explanation of ink!'s compatibility with Solidity and Ethereum tooling (MetaMask, block explorers, Hardhat, \u2026)."}),(0,d.jsx)("meta",{name:"keywords",content:"Ethereum, MetaMask, Solidity, Hardhat, ink!"}),(0,d.jsx)("meta",{property:"og:title",content:"Solidity & MetaMask Compatibility"}),(0,d.jsx)("meta",{property:"og:description",content:"Explanation of ink!'s compatibility with Solidity and Ethereum tooling (MetaMask, block explorers, Hardhat, \u2026)."}),(0,d.jsx)("meta",{property:"og:image",content:"https://use-ink.com/img/opengraph/solidity-metamask.jpg"}),(0,d.jsx)("meta",{property:"og:image:width",content:"1200"}),(0,d.jsx)("meta",{property:"og:image:height",content:"630"}),(0,d.jsx)("meta",{property:"og:image:alt",content:"Solidity and MetaMask"}),(0,d.jsx)("meta",{property:"og:image:type",content:"image/jpg"})]}),"\n",(0,d.jsx)(t.p,{children:(0,d.jsx)(t.img,{alt:"Metadata Title Picture",src:i(94094).A+"",width:"1600",height:"500"})}),"\n",(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"solidity--metamask-compatibility",children:"Solidity & MetaMask Compatibility"})}),"\n",(0,d.jsxs)(t.admonition,{type:"caution",children:[(0,d.jsx)(t.p,{children:"This page has not yet been written for ink! v6."}),(0,d.jsx)(t.p,{children:"TODO @davidsemakula"})]}),"\n",(0,d.jsxs)(t.p,{children:["With ink! v6, we have introduced a new attribute argument ",(0,d.jsx)(t.code,{children:"abi"})," for the ",(0,d.jsx)(t.code,{children:"#[ink::contract]"})," macro.\nIt allows building your contract in Solidity ABI compatibility mode (",(0,d.jsx)(t.a,{href:"/docs/v6/macros-attributes/contract#abi-string",children:"more details here"}),")."]}),"\n",(0,d.jsx)(t.p,{children:"The implication of supporting Solidity ABI encoding is that all types used as constructor/message arguments\nand return types must define a mapping to an equivalent Solidity type."}),"\n",(0,d.jsxs)(t.p,{children:["This mapping is defined using the ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolEncode"})})," and ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolDecode"})})," traits,\nwhich are analogs to ",(0,d.jsxs)(t.a,{href:"https://docs.rs/parity-scale-codec/latest/parity_scale_codec",children:[(0,d.jsx)(t.code,{children:"scale::Encode"})," and ",(0,d.jsx)(t.code,{children:"scale::Decode"})]})," (but for Solidity ABI encoding/decoding).\nYou won't be able to use Rust types for which no mapping to a Solidity type exists.\nAn error about a missing trait implementation for this type will be thrown."]}),"\n",(0,d.jsx)(t.h2,{id:"rustink-to-solidity-abi-type-mapping",children:"Rust/ink! to Solidity ABI type mapping"}),"\n",(0,d.jsx)(t.h3,{id:"defaultprovided-mappings",children:"Default/provided mappings"}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolEncode"})})," and ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolDecode"})})," are implemented\nfor the following Rust/ink! primitive types creating a mapping\nto the corresponding Solidity ABI types as shown in the table below:"]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Rust/ink! type"}),(0,d.jsx)(t.th,{children:"Solidity ABI type"}),(0,d.jsx)(t.th,{children:"Notes"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bool"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bool"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"iN"})," for ",(0,d.jsx)(t.code,{children:"N \u2208 {8,16,32,64,128}"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"intN"})}),(0,d.jsxs)(t.td,{children:["e.g ",(0,d.jsx)(t.code,{children:"i8"})," \u2194 ",(0,d.jsx)(t.code,{children:"int8"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"uN"})," for ",(0,d.jsx)(t.code,{children:"N \u2208 {8,16,32,64,128}"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"uintN"})}),(0,d.jsxs)(t.td,{children:["e.g ",(0,d.jsx)(t.code,{children:"u8"})," \u2194 ",(0,d.jsx)(t.code,{children:"uint8"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.U256.html",children:(0,d.jsx)(t.code,{children:"ink::U256"})})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"uint256"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Box<str>"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/type.Address.html",children:(0,d.jsx)(t.code,{children:"ink::Address"})})," / ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.H160.html",children:(0,d.jsx)(t.code,{children:"ink::H160"})})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"address"})}),(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"ink::Address"})," is a type alias for the ",(0,d.jsx)(t.code,{children:"ink::H160"})," type used for addresses in ",(0,d.jsx)(t.code,{children:"pallet-revive"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"[T; N]"})," for ",(0,d.jsx)(t.code,{children:"const N: usize"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"T[N]"})}),(0,d.jsxs)(t.td,{children:["e.g. ",(0,d.jsx)(t.code,{children:"[i8; 64]"})," \u2194 ",(0,d.jsx)(t.code,{children:"int8[64]"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Vec<T>"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"T[]"})}),(0,d.jsxs)(t.td,{children:["e.g. ",(0,d.jsx)(t.code,{children:"Vec<i8>"})," \u2194 ",(0,d.jsx)(t.code,{children:"int8[]"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Box<[T]>"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"T[]"})}),(0,d.jsxs)(t.td,{children:["e.g. ",(0,d.jsx)(t.code,{children:"Box<[i8]>"})," \u2194 ",(0,d.jsx)(t.code,{children:"int8[]"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,d.jsx)(t.code,{children:"ink::SolBytes<u8>"})})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bytes1"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,d.jsx)(t.code,{children:"ink::SolBytes<[u8; N]>"})})," for ",(0,d.jsx)(t.code,{children:"1 <= N <= 32"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bytesN"})}),(0,d.jsxs)(t.td,{children:["e.g. ",(0,d.jsx)(t.code,{children:"ink::SolBytes<[u8; 1]>"})," \u2194 ",(0,d.jsx)(t.code,{children:"bytes1"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,d.jsx)(t.code,{children:"ink::SolBytes<Vec<u8>>"})})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bytes"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,d.jsx)(t.code,{children:"ink::SolBytes<Box<[u8]>>"})})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"bytes"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"(T1, T2, T3, ... T12)"})}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"(U1, U2, U3, ... U12)"})}),(0,d.jsxs)(t.td,{children:["where ",(0,d.jsx)(t.code,{children:"T1"})," \u2194 ",(0,d.jsx)(t.code,{children:"U1"}),", ... ",(0,d.jsx)(t.code,{children:"T12"})," \u2194 ",(0,d.jsx)(t.code,{children:"U12"})," e.g. ",(0,d.jsx)(t.code,{children:"(bool, u8, Address)"})," \u2194 ",(0,d.jsx)(t.code,{children:"(bool, uint8, address)"})]})]})]})]}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolEncode"})})," is additionally implemented for reference and smart\npointer types below:"]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Rust/ink! type"}),(0,d.jsx)(t.th,{children:"Solidity ABI type"}),(0,d.jsx)(t.th,{children:"Notes"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"&str"}),", ",(0,d.jsx)(t.code,{children:"&mut str"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsx)(t.td,{})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"&T"}),", ",(0,d.jsx)(t.code,{children:"&mut T"}),", ",(0,d.jsx)(t.code,{children:"Box<T>"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"T"})}),(0,d.jsxs)(t.td,{children:["e.g. ",(0,d.jsx)(t.code,{children:"&i8 \u2194 int8"})]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsxs)(t.td,{children:[(0,d.jsx)(t.code,{children:"&[T]"}),", ",(0,d.jsx)(t.code,{children:"&mut [T]"})]}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"T[]"})}),(0,d.jsxs)(t.td,{children:["e.g. ",(0,d.jsx)(t.code,{children:"&[i8]"})," \u2194 ",(0,d.jsx)(t.code,{children:"int8[]"})]})]})]})]}),"\n",(0,d.jsx)(t.h3,{id:"mappings-for-arbitrary-custom-types",children:"Mappings for arbitrary custom types"}),"\n",(0,d.jsxs)(t.p,{children:["See the rustdoc for ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolEncode"})})," and ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolDecode"})}),"\nfor instructions for implementing the traits for arbitrary custom types."]}),"\n",(0,d.jsx)(t.admonition,{type:"note",children:(0,d.jsxs)(t.p,{children:["Rust's ",(0,d.jsx)(t.a,{href:"https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence",children:"coherence/orphan rules"})," mean that you can\nonly implement the ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolEncode"})})," and ",(0,d.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/trait.SolEncode.html",children:(0,d.jsx)(t.code,{children:"SolDecode"})}),"\ntraits for local types."]})}),"\n",(0,d.jsx)(t.h2,{id:"metamask",children:"MetaMask"}),"\n",(0,d.jsx)(t.p,{children:"\u2026"}),"\n",(0,d.jsx)(t.h2,{id:"hardhat-foundry-etc",children:"Hardhat, Foundry, etc."}),"\n",(0,d.jsx)(t.p,{children:"\u2026"}),"\n",(0,d.jsx)(t.h2,{id:"block-explorers",children:"Block explorers"}),"\n",(0,d.jsx)(t.p,{children:"\u2026"})]})}function a(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},94094:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/solidity-c214fe3b4dd74e70b39bbb135b78c5db.svg"},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>c});var s=i(96540);const d={},n=s.createContext(d);function r(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);