"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[9157],{9346:(n,e,t)=>{t.d(e,{A:()=>s});const s=t.p+"assets/images/magnifying-glass-3ca6f9b0db517931b899b678a8543a81.svg"},65404:(n,e,t)=>{t.d(e,{R:()=>a,x:()=>d});var s=t(36672);const i={},o=s.createContext(i);function a(n){const e=s.useContext(o);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),s.createElement(o.Provider,{value:e},n.children)}},84557:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>d,default:()=>g,frontMatter:()=>a,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"debugging/sandbox","title":"Sandbox","description":"Magnifying Glass Title Picture","source":"@site/docs/debugging/sandbox.md","sourceDirName":"debugging","slug":"/contract-debugging/sandbox","permalink":"/docs/v6/contract-debugging/sandbox","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/docs/debugging/sandbox.md","tags":[],"version":"current","frontMatter":{"title":"Sandbox","slug":"/contract-debugging/sandbox","hide_title":true},"sidebar":"reference","previous":{"title":"Tracing API","permalink":"/docs/v6/contract-debugging/pallet-revive-tracing-api"},"next":{"title":"Decode raw transactions","permalink":"/docs/v6/contract-debugging/decoding-transactions"}}');var i=t(23420),o=t(65404);const a={title:"Sandbox",slug:"/contract-debugging/sandbox",hide_title:!0},d="Sandbox API",c={},r=[];function l(n){const e={a:"a",code:"code",h1:"h1",header:"header",img:"img",li:"li",p:"p",ul:"ul",...(0,o.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{alt:"Magnifying Glass Title Picture",src:t(9346).A+"",width:"1600",height:"500"})}),"\n",(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"sandbox-api",children:"Sandbox API"})}),"\n",(0,i.jsxs)(e.p,{children:["In the chapter on ",(0,i.jsx)(e.a,{href:"/docs/v6/contract-testing/drink",children:"Testing Strategies"}),", we explain that ink! supports\ntwo means of End-to-End testing:"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"#[ink_e2e::test]"}),":\nThe End-to-End tests spawn a local node process in the backend\nand submit transactions against it, returning the output to you."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"#[ink_sandbox::test(backend(runtime_only(sandbox = sandbox_runtime::ContractCallerSandbox,client  = ink_sandbox::SandboxClient)))]"}),"\nWith these settings, the End-to-End tests will be executed in\na sandbox. The sandbox contains the ",(0,i.jsx)(e.code,{children:"pallet-revive"}),", but anything\nthat the node would do is mocked and can be influenced (block numbers, etc.)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["You can utilize the DRink! library that is described on\n",(0,i.jsx)(e.a,{href:"/docs/v6/contract-testing/drink",children:"Testing Strategies"})," to influence the state of the mocked\nsandbox. This is very useful for debugging, and we invite you to read the linked page."]})]})}function g(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}}}]);