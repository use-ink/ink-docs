"use strict";(self.webpackChunkink_docs=self.webpackChunkink_docs||[]).push([[7462],{1264:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"background/solidity-metamask-compat","title":"Solidity & MetaMask Compatibility","description":"Metadata Title Picture","source":"@site/docs/background/solidity-metamask-compat.md","sourceDirName":"background","slug":"/background/solidity-metamask-compatibility","permalink":"/docs/v6/background/solidity-metamask-compatibility","draft":false,"unlisted":false,"editUrl":"https://github.com/use-ink/ink-docs/edit/master/docs/background/solidity-metamask-compat.md","tags":[],"version":"current","frontMatter":{"title":"Solidity & MetaMask Compatibility","hide_title":true,"slug":"/background/solidity-metamask-compatibility"},"sidebar":"reference","previous":{"title":"Why RISC-V and PolkaVM for Smart Contracts?","permalink":"/docs/v6/background/why-riscv-and-polkavm-for-smart-contracts"},"next":{"title":"ink! vs. Solidity","permalink":"/docs/v6/background/ink-vs-solidity"}}');var n=i(23420),d=i(65404);const o={title:"Solidity & MetaMask Compatibility",hide_title:!0,slug:"/background/solidity-metamask-compatibility"},r="Solidity & MetaMask Compatibility",c={},l=[{value:"Rust/ink! to Solidity ABI type mapping",id:"rustink-to-solidity-abi-type-mapping",level:2},{value:"Default/provided mappings",id:"defaultprovided-mappings",level:3},{value:"Mappings for arbitrary custom types",id:"mappings-for-arbitrary-custom-types",level:3},{value:"MetaMask",id:"metamask",level:2},{value:"Solidity Tooling",id:"solidity-tooling",level:2},{value:"Block explorers",id:"block-explorers",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s,{children:[(0,n.jsx)("meta",{name:"description",content:"Explanation of ink!'s compatibility with Solidity and Ethereum tooling (MetaMask, block explorers, Hardhat, \u2026)."}),(0,n.jsx)("meta",{name:"keywords",content:"Ethereum, MetaMask, Solidity, Hardhat, ink!"}),(0,n.jsx)("meta",{property:"og:title",content:"Solidity & MetaMask Compatibility"}),(0,n.jsx)("meta",{property:"og:description",content:"Explanation of ink!'s compatibility with Solidity and Ethereum tooling (MetaMask, block explorers, Hardhat, \u2026)."}),(0,n.jsx)("meta",{property:"og:image",content:"https://use-ink.com/img/opengraph/solidity-metamask.jpg"}),(0,n.jsx)("meta",{property:"og:image:width",content:"1200"}),(0,n.jsx)("meta",{property:"og:image:height",content:"630"}),(0,n.jsx)("meta",{property:"og:image:alt",content:"Solidity and MetaMask"}),(0,n.jsx)("meta",{property:"og:image:type",content:"image/jpg"})]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Metadata Title Picture",src:i(99905).A+"",width:"1600",height:"500"})}),"\n",(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"solidity--metamask-compatibility",children:"Solidity & MetaMask Compatibility"})}),"\n",(0,n.jsxs)(t.p,{children:["With ink! v6, we have introduced an ",(0,n.jsx)(t.code,{children:"abi"})," field in a custom ",(0,n.jsx)(t.code,{children:"ink-lang"})," table\nin the ",(0,n.jsxs)(t.a,{href:"https://doc.rust-lang.org/cargo/reference/manifest.html#the-metadata-table",children:[(0,n.jsx)(t.code,{children:"package.metadata"})," table"]})," of a contract's manifest\nfile (i.e. the ",(0,n.jsx)(t.code,{children:"Cargo.toml"})," file) - ",(0,n.jsx)(t.a,{href:"/docs/v6/basics/abi#declaring-the-abi",children:"more details here"}),".\nIt allows building your contract in Solidity ABI compatibility mode\nwhen declared as follows:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-toml",children:'[package.metadata.ink-lang]\nabi = "sol"\n'})}),"\n",(0,n.jsx)(t.p,{children:"The implication of supporting Solidity ABI encoding is that all types used as\nconstructor/message argument and return types, and event argument types must\ndefine a mapping to an equivalent Solidity ABI type."}),"\n",(0,n.jsx)(t.h2,{id:"rustink-to-solidity-abi-type-mapping",children:"Rust/ink! to Solidity ABI type mapping"}),"\n",(0,n.jsxs)(t.p,{children:["This mapping is defined using the ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolEncode.html",children:(0,n.jsx)(t.code,{children:"SolEncode"})})," and\n",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolDecode.html",children:(0,n.jsx)(t.code,{children:"SolDecode"})})," traits, which are analogs to\n",(0,n.jsxs)(t.a,{href:"https://docs.rs/parity-scale-codec/latest/parity_scale_codec",children:[(0,n.jsx)(t.code,{children:"scale::Encode"})," and ",(0,n.jsx)(t.code,{children:"scale::Decode"})]}),"\n(but for Solidity ABI encoding/decoding).\nYou won't be able to use Rust types for which no mapping to a Solidity type exists.\nAn error about a missing trait implementation for this type will be thrown."]}),"\n",(0,n.jsx)(t.h3,{id:"defaultprovided-mappings",children:"Default/provided mappings"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolEncode.html",children:(0,n.jsx)(t.code,{children:"SolEncode"})})," and ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolDecode.html",children:(0,n.jsx)(t.code,{children:"SolDecode"})})," are implemented\nfor the following Rust/ink! primitive types creating a mapping\nto the corresponding Solidity ABI types as shown in the table below:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Rust/ink! type"}),(0,n.jsx)(t.th,{children:"Solidity ABI type"}),(0,n.jsx)(t.th,{children:"Notes"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"bool"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"bool"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"iN"})," for ",(0,n.jsx)(t.code,{children:"N \u2208 {8,16,32,64,128}"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"intN"})}),(0,n.jsxs)(t.td,{children:["e.g ",(0,n.jsx)(t.code,{children:"i8"})," \u2194 ",(0,n.jsx)(t.code,{children:"int8"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"uN"})," for ",(0,n.jsx)(t.code,{children:"N \u2208 {8,16,32,64,128}"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"uintN"})}),(0,n.jsxs)(t.td,{children:["e.g ",(0,n.jsx)(t.code,{children:"u8"})," \u2194 ",(0,n.jsx)(t.code,{children:"uint8"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.U256.html",children:(0,n.jsx)(t.code,{children:"ink::U256"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"uint256"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Box<str>"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/type.Address.html",children:(0,n.jsx)(t.code,{children:"ink::Address"})})," / ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.H160.html",children:(0,n.jsx)(t.code,{children:"ink::H160"})})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"address"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"ink::Address"})," is a type alias for the ",(0,n.jsx)(t.code,{children:"ink::H160"})," type used for addresses in ",(0,n.jsx)(t.code,{children:"pallet-revive"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"[T; N]"})," for ",(0,n.jsx)(t.code,{children:"const N: usize"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"T[N]"})}),(0,n.jsxs)(t.td,{children:["e.g. ",(0,n.jsx)(t.code,{children:"[i8; 64]"})," \u2194 ",(0,n.jsx)(t.code,{children:"int8[64]"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Vec<T>"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"T[]"})}),(0,n.jsxs)(t.td,{children:["e.g. ",(0,n.jsx)(t.code,{children:"Vec<i8>"})," \u2194 ",(0,n.jsx)(t.code,{children:"int8[]"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"Box<[T]>"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"T[]"})}),(0,n.jsxs)(t.td,{children:["e.g. ",(0,n.jsx)(t.code,{children:"Box<[i8]>"})," \u2194 ",(0,n.jsx)(t.code,{children:"int8[]"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,n.jsx)(t.code,{children:"ink::SolBytes<u8>"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"bytes1"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,n.jsx)(t.code,{children:"ink::SolBytes<[u8; N]>"})})," for ",(0,n.jsx)(t.code,{children:"1 <= N <= 32"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"bytesN"})}),(0,n.jsxs)(t.td,{children:["e.g. ",(0,n.jsx)(t.code,{children:"ink::SolBytes<[u8; 1]>"})," \u2194 ",(0,n.jsx)(t.code,{children:"bytes1"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,n.jsx)(t.code,{children:"ink::SolBytes<Vec<u8>>"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"bytes"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://docs.rs/ink/latest/ink/struct.SolBytes.html",children:(0,n.jsx)(t.code,{children:"ink::SolBytes<Box<[u8]>>"})})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"bytes"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(T1, T2, T3, ... T12)"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"(U1, U2, U3, ... U12)"})}),(0,n.jsxs)(t.td,{children:["where ",(0,n.jsx)(t.code,{children:"T1"})," \u2194 ",(0,n.jsx)(t.code,{children:"U1"}),", ... ",(0,n.jsx)(t.code,{children:"T12"})," \u2194 ",(0,n.jsx)(t.code,{children:"U12"})," e.g. ",(0,n.jsx)(t.code,{children:"(bool, u8, Address)"})," \u2194 ",(0,n.jsx)(t.code,{children:"(bool, uint8, address)"})]})]})]})]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolEncode.html",children:(0,n.jsx)(t.code,{children:"SolEncode"})})," is additionally implemented for reference and smart\npointer types below:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Rust/ink! type"}),(0,n.jsx)(t.th,{children:"Solidity ABI type"}),(0,n.jsx)(t.th,{children:"Notes"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"&str"}),", ",(0,n.jsx)(t.code,{children:"&mut str"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"string"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"&T"}),", ",(0,n.jsx)(t.code,{children:"&mut T"}),", ",(0,n.jsx)(t.code,{children:"Box<T>"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"T"})}),(0,n.jsxs)(t.td,{children:["e.g. ",(0,n.jsx)(t.code,{children:"&i8 \u2194 int8"})]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"&[T]"}),", ",(0,n.jsx)(t.code,{children:"&mut [T]"})]}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"T[]"})}),(0,n.jsxs)(t.td,{children:["e.g. ",(0,n.jsx)(t.code,{children:"&[i8]"})," \u2194 ",(0,n.jsx)(t.code,{children:"int8[]"})]})]})]})]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Rust's ",(0,n.jsx)(t.code,{children:"Option"})," and ",(0,n.jsx)(t.code,{children:"Result"})," types are notable omissions from the default mappings.\nThis is because they don't have ",(0,n.jsx)(t.strong,{children:"semantically"})," equivalent Solidity ABI types."]})}),"\n",(0,n.jsx)(t.h3,{id:"mappings-for-arbitrary-custom-types",children:"Mappings for arbitrary custom types"}),"\n",(0,n.jsxs)(t.p,{children:["See the rustdoc for ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolEncode.html",children:(0,n.jsx)(t.code,{children:"SolEncode"})})," and ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolDecode.html",children:(0,n.jsx)(t.code,{children:"SolDecode"})}),"\nfor instructions for implementing the traits for arbitrary custom types."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Rust's ",(0,n.jsx)(t.a,{href:"https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence",children:"coherence/orphan rules"})," mean that you can\nonly implement the ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolEncode.html",children:(0,n.jsx)(t.code,{children:"SolEncode"})})," and ",(0,n.jsx)(t.a,{href:"https://docs.rs/ink/6.0.0-alpha/ink/trait.SolDecode.html",children:(0,n.jsx)(t.code,{children:"SolDecode"})}),"\ntraits for local types."]})}),"\n",(0,n.jsx)(t.h2,{id:"metamask",children:"MetaMask"}),"\n",(0,n.jsxs)(t.p,{children:["You can use ",(0,n.jsx)(t.a,{href:"https://metamask.io/",children:"MetaMask"})," to interact with your ",(0,n.jsx)(t.code,{children:"ink!"})," smart contract via the Solidity ABI."]}),"\n",(0,n.jsxs)(t.p,{children:["To set up your wallet and connect to the appropriate network, follow this quick start guide: ",(0,n.jsx)(t.a,{href:"https://papermoonio.github.io/polkadot-mkdocs/develop/smart-contracts/wallets/#metamask",children:"Connect MetaMask to Polkadot Hub Testnet"})]}),"\n",(0,n.jsxs)(t.admonition,{title:"Network Details \u2013 Polkadot Hub Testnet",type:"info",children:[(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Network name:"})," Polkadot Hub TestNet"]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Currency symbol:"})," PAS"]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Chain ID:"})," 420420422"]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"RPC URL:"})," ",(0,n.jsx)(t.a,{href:"https://testnet-passet-hub-eth-rpc.polkadot.io",children:"https://testnet-passet-hub-eth-rpc.polkadot.io"})]}),(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Block explorer URL:"})," ",(0,n.jsx)(t.a,{href:"https://blockscout-passet-hub.parity-testnet.parity.io/",children:"https://blockscout-passet-hub.parity-testnet.parity.io/"})]})]}),"\n",(0,n.jsxs)(t.p,{children:["For step-by-step manual configuration instructions, see this guide: ",(0,n.jsx)(t.a,{href:"https://docs.polkadot.com/develop/smart-contracts/wallets/#metamask",children:"Connect MetaMask to Polkadot Hub Testnet"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"solidity-tooling",children:"Solidity Tooling"}),"\n",(0,n.jsxs)(t.p,{children:["You can deploy and interact with ",(0,n.jsx)(t.code,{children:"ink!"})," smart contracts using popular Solidity tools like Hardhat and Foundry thanks to the Solidity-compatible ABI output."]}),"\n",(0,n.jsxs)(t.p,{children:["Full Tutorial: ",(0,n.jsx)(t.a,{href:"/docs/v6/integrations-and-sdks/ethereum-compatibility/overview",children:"Use Solidity Tooling with ink! Contracts"})]}),"\n",(0,n.jsxs)(t.p,{children:["This guide walks through compiling an ",(0,n.jsx)(t.code,{children:"ink!"})," contract with Solidity metadata, configuring Hardhat, deploying to the Polkadot Hub Testnet, and interacting with the contract using Ethers.js."]}),"\n",(0,n.jsx)(t.h2,{id:"block-explorers",children:"Block explorers"}),"\n",(0,n.jsxs)(t.p,{children:["PolkaVM smart contracts are compatible with Ethereum-style block explorers such as ",(0,n.jsx)(t.a,{href:"https://www.blockscout.com/",children:"BlockScout"}),", which is already integrated with the Polkadot Hub Testnet."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://blockscout.testnet.polkadot.io",children:"Polkadot Hub Testnet BlockScout"})}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["For additional information and instructions, check out: ",(0,n.jsx)(t.a,{href:"https://papermoonio.github.io/polkadot-mkdocs/develop/smart-contracts/block-explorers/",children:"Polkadot Smart Contract Block Explorers"})]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},65404:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>r});var s=i(36672);const n={},d=s.createContext(n);function o(e){const t=s.useContext(d);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(d.Provider,{value:t},e.children)}},99905:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/solidity-c214fe3b4dd74e70b39bbb135b78c5db.svg"}}]);